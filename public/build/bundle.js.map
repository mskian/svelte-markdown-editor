{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/utils.js","../../src/Editor.svelte","../../src/Preview.svelte","../../node_modules/marked/lib/marked.esm.js","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.44.1' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","// string used as a fallback in case local storage doesn't have a saved value\nconst initialValue = `# Markdown Editor\n\n## Free and Open Source\n\n> Create Markdown Post \n\nSave file with Markdown Content.\n`;\n\n// utility function returning the initial value for markdown\n// using the value in local storage or the default value described above\nexport function getInitialValue() {\n    return fromLocalStorage('markdown--string') || initialValue;\n}\n\n// utility function returning a value from local storage\nfunction fromLocalStorage(key) {\n    return localStorage.getItem(key);\n}\n\n// utility function storing the existing string of markup in local storage\nexport function toLocalStorage(string) {\n    // sanitize the string with dompurify\n    localStorage.setItem('markdown--string', DOMPurify.sanitize(string));\n}","<script>\n  import { createEventDispatcher, onDestroy } from 'svelte';\n  const dispatch = createEventDispatcher();\n  import { toLocalStorage } from './utils.js';\n\n  // transition to fade in the icon to show the file has been saved\n  import { fly } from 'svelte/transition';\n\n  // initialize a variable from the markdown file\n  export let markdown;\n  let value = markdown;\n\n  // variable bound to the text area, in order to scroll at the bottom when appending elements\n  let textarea;\n\n  // function adding the input string in the textarea element, and at the point specified by the cursor\n  function updateValue(string) {\n    const { selectionEnd } = textarea;\n    value = `${value.slice(0, selectionEnd)}${string}${value.slice(\n      selectionEnd\n    )}`;\n  }\n\n  // following a click on the code button, append a series of backtick\n  function handleCode() {\n    const block = `\\n\\`\\`\\`\\n\\n\\`\\`\\`\\n`;\n    updateValue(block);\n  }\n\n  // following a click on the link button, append the syntax for url []()\n  function handleLink() {\n    const link = '[link](url)';\n    updateValue(link);\n  }\n\n   function handleimage() {\n    const image = '![](http://www.example.com/image.jpg)';\n    updateValue(image);\n  }\n\n   function handlehead() {\n    const heading = '#';\n    updateValue(heading);\n  }\n\n  // following a click on the save button toggle a boolean to change the icon and call the function to save to local storage\n  let isSaved = false;\n  function handleSave() {\n    isSaved = true;\n    toLocalStorage(value);\n  }\n\n  // following the input event on the textarea remove the saved icon to show the default action\n  function handleInput(e) {\n    if (isSaved) {\n      isSaved = false;\n    }\n  }\n\n  // following a click on the preview button, dispatch the event to show the preview\n  function handlePreview() {\n    // pass the value to the component to update the markdown\n    dispatch('preview', value);\n  }\n</script>\n<form action=\"http://localhost:3005/data\" method=\"post\" role=\"form\" enctype=\"application/x-www-form-urlencoded\">\n<div class=\"field\">\n<div class=\"control\">\n<label class=\"label has-text-weight-bold\" for=\"Post title\">Post title</label>\n<input type=\"text\" id=\"title\" name=\"title\" class=\"input is-link\" placeholder=\"Post title\">\n</div>\n</div>\n<div class=\"field\">\n<div class=\"control\">\n<label class=\"label has-text-weight-bold\" for=\"Post description\">Post Description</label>\n<textarea class=\"input input-description is-link\" type=\"text\" id=\"description\" name=\"description\" placeholder=\"Post title\" />\n</div>\n</div>\n<div class=\"field\">\n<div class=\"control\">\n<label class=\"label has-text-weight-bold\" for=\"Post Content\">Post Markdown Content</label>\n<nav>\n  <p><b>Edit tools - &nbsp;&nbsp; </b></p>\n  <!-- svelte-ignore a11y-missing-attribute -->\n  <a\n    on:click={handleCode}\n    title=\"Add code block\"\n    aria-label=\"Add code block\"\n  >\n  🖥\n  </a>\n  &nbsp;&nbsp;\n  <!-- svelte-ignore a11y-missing-attribute -->\n  <a on:click={handleLink} title=\"Add link\" aria-label=\"Add link\">\n    🌐\n  </a>\n  &nbsp;&nbsp;\n  <!-- svelte-ignore a11y-missing-attribute -->\n  <a on:click={handlehead} title=\"Add Heading\" aria-label=\"Add Heading\">\n    👔\n  </a>\n  &nbsp;&nbsp;\n  <!-- svelte-ignore a11y-missing-attribute -->\n  <a on:click={handleimage} title=\"Add image\" aria-label=\"Add image\">\n    🖼\n  </a>\n  &nbsp;&nbsp;\n  <!-- svelte-ignore a11y-missing-attribute -->\n  <a\n    on:click={handleSave}\n    title=\"Save to local storage\"\n    aria-label=\"Save to local storage\"\n  >\n    {#if isSaved}\n    ☑\n    {:else}\n    💾\n    {/if}\n    </a>\n    &nbsp;&nbsp;\n  <!-- on click dispatch the preview event to show the appropriate component -->\n  <!-- svelte-ignore a11y-missing-attribute -->\n  <a\n    on:click={handlePreview}\n    title=\"Preview markdown\"\n    aria-label=\"Download markdown\"\n  >\n   🕵\n  </a>\n</nav>\n\n<textarea class=\"input input-editor is-link\" bind:this={textarea} bind:value on:input={handleInput} name=\"postcontent\" id=\"postcontent\" />\n</div>\n</div>\n\n<div class=\"field\">\n<div class=\"control\">\n<label class=\"label has-text-weight-bold\" for=\"Post tag\">Post tag</label>\n<input class=\"input is-link \"type=\"text\" id=\"tag\" name=\"tag\" placeholder=\"Add tag\">\n</div>\n</div>\n<div class=\"field\">\n<div class=\"control\">\n<div class=\"text-center\">\n<button type=\"submit\" class=\"btn purple\">Create Post</button>\n</div>\n</div>\n</div>\n</form>\n<br>","<script>\n  import { createEventDispatcher } from 'svelte';\n  const dispatch = createEventDispatcher();\n\n  // include the markup through the @html syntax\n  export let markup;\n</script>\n\n<nav>\n  <!-- on click dispatch the event to show the edit component -->\n  <button\n    on:click={() => dispatch('edit')}\n    title=\"Edit markdown\"\n    aria-label=\"Edit markdown\"\n  >\n    <svg\n      aria-hidden=\"true\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 100 100\"\n    >\n      <g\n        transform=\"translate(5 5)\"\n        stroke-width=\"10\"\n        stroke=\"currentColor\"\n        stroke-linejoin=\"round\"\n        stroke-linecap=\"round\"\n        fill=\"none\"\n      >\n        <path d=\"M 73 0 l 17 17 -45 45 -17 0 0 -17 45 -45\" />\n        <path\n          d=\"M 35 10 h -25 a 10 10 0 0 0 -10 10 v 60 a 10 10 0 0 0 10 10 h 60 a 10 10 0 0 0 10 -10 v -25\"\n        />\n      </g>\n    </svg>\n  </button>\n</nav>\n\n{@html markup}\n\n<style></style>\n","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2021, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\nfunction getDefaults() {\n  return {\n    baseUrl: null,\n    breaks: false,\n    extensions: null,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartLists: false,\n    smartypants: false,\n    tokenizer: null,\n    walkTokens: null,\n    xhtml: false\n  };\n}\n\nlet defaults = getDefaults();\n\nfunction changeDefaults(newDefaults) {\n  defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = /[&<>\"']/g;\nconst escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\nconst escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\nfunction edit(regex, opt) {\n  regex = regex.source || regex;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction merge(obj) {\n  let i = 1,\n    target,\n    key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n  if (!cells[0].trim()) { cells.shift(); }\n  if (!cells[cells.length - 1].trim()) { cells.pop(); }\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n// Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n// /c*$/ is vulnerable to REDOS.\n// invert: Remove suffix of non-c chars instead. Default falsey.\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.substr(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\n// copied from https://stackoverflow.com/a/5450113/806777\nfunction repeatString(pattern, count) {\n  if (count < 1) {\n    return '';\n  }\n  let result = '';\n  while (count > 1) {\n    if (count & 1) {\n      result += pattern;\n    }\n    count >>= 1;\n    pattern += pattern;\n  }\n  return result + pattern;\n}\n\nfunction outputLink(cap, link, raw, lexer) {\n  const href = link.href;\n  const title = link.title ? escape(link.title) : null;\n  const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n  if (cap[0].charAt(0) !== '!') {\n    lexer.state.inLink = true;\n    const token = {\n      type: 'link',\n      raw,\n      href,\n      title,\n      text,\n      tokens: lexer.inlineTokens(text, [])\n    };\n    lexer.state.inLink = false;\n    return token;\n  } else {\n    return {\n      type: 'image',\n      raw,\n      href,\n      title,\n      text: escape(text)\n    };\n  }\n}\n\nfunction indentCodeCompensation(raw, text) {\n  const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n  if (matchIndentToCode === null) {\n    return text;\n  }\n\n  const indentToCode = matchIndentToCode[1];\n\n  return text\n    .split('\\n')\n    .map(node => {\n      const matchIndentInNode = node.match(/^\\s+/);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      const [indentInNode] = matchIndentInNode;\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    })\n    .join('\\n');\n}\n\n/**\n * Tokenizer\n */\nclass Tokenizer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  space(src) {\n    const cap = this.rules.block.newline.exec(src);\n    if (cap) {\n      if (cap[0].length > 1) {\n        return {\n          type: 'space',\n          raw: cap[0]\n        };\n      }\n      return { raw: '\\n' };\n    }\n  }\n\n  code(src) {\n    const cap = this.rules.block.code.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ {1,4}/gm, '');\n      return {\n        type: 'code',\n        raw: cap[0],\n        codeBlockStyle: 'indented',\n        text: !this.options.pedantic\n          ? rtrim(text, '\\n')\n          : text\n      };\n    }\n  }\n\n  fences(src) {\n    const cap = this.rules.block.fences.exec(src);\n    if (cap) {\n      const raw = cap[0];\n      const text = indentCodeCompensation(raw, cap[3] || '');\n\n      return {\n        type: 'code',\n        raw,\n        lang: cap[2] ? cap[2].trim() : cap[2],\n        text\n      };\n    }\n  }\n\n  heading(src) {\n    const cap = this.rules.block.heading.exec(src);\n    if (cap) {\n      let text = cap[2].trim();\n\n      // remove trailing #s\n      if (/#$/.test(text)) {\n        const trimmed = rtrim(text, '#');\n        if (this.options.pedantic) {\n          text = trimmed.trim();\n        } else if (!trimmed || / $/.test(trimmed)) {\n          // CommonMark requires space before trailing #s\n          text = trimmed.trim();\n        }\n      }\n\n      const token = {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[1].length,\n        text: text,\n        tokens: []\n      };\n      this.lexer.inline(token.text, token.tokens);\n      return token;\n    }\n  }\n\n  hr(src) {\n    const cap = this.rules.block.hr.exec(src);\n    if (cap) {\n      return {\n        type: 'hr',\n        raw: cap[0]\n      };\n    }\n  }\n\n  blockquote(src) {\n    const cap = this.rules.block.blockquote.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ *> ?/gm, '');\n\n      return {\n        type: 'blockquote',\n        raw: cap[0],\n        tokens: this.lexer.blockTokens(text, []),\n        text\n      };\n    }\n  }\n\n  list(src) {\n    let cap = this.rules.block.list.exec(src);\n    if (cap) {\n      let raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine,\n        line, lines, itemContents;\n\n      let bull = cap[1].trim();\n      const isordered = bull.length > 1;\n\n      const list = {\n        type: 'list',\n        raw: '',\n        ordered: isordered,\n        start: isordered ? +bull.slice(0, -1) : '',\n        loose: false,\n        items: []\n      };\n\n      bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n\n      if (this.options.pedantic) {\n        bull = isordered ? bull : '[*+-]';\n      }\n\n      // Get next list item\n      const itemRegex = new RegExp(`^( {0,3}${bull})((?: [^\\\\n]*| *)(?:\\\\n[^\\\\n]*)*(?:\\\\n|$))`);\n\n      // Get each top-level item\n      while (src) {\n        if (this.rules.block.hr.test(src)) { // End list if we encounter an HR (possibly move into itemRegex?)\n          break;\n        }\n\n        if (!(cap = itemRegex.exec(src))) {\n          break;\n        }\n\n        lines = cap[2].split('\\n');\n\n        if (this.options.pedantic) {\n          indent = 2;\n          itemContents = lines[0].trimLeft();\n        } else {\n          indent = cap[2].search(/[^ ]/); // Find first non-space char\n          indent = cap[1].length + (indent > 4 ? 1 : indent); // intented code blocks after 4 spaces; indent is always 1\n          itemContents = lines[0].slice(indent - cap[1].length);\n        }\n\n        blankLine = false;\n        raw = cap[0];\n\n        if (!lines[0] && /^ *$/.test(lines[1])) { // items begin with at most one blank line\n          raw = cap[1] + lines.slice(0, 2).join('\\n') + '\\n';\n          list.loose = true;\n          lines = [];\n        }\n\n        const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])`);\n\n        for (i = 1; i < lines.length; i++) {\n          line = lines[i];\n\n          if (this.options.pedantic) { // Re-align to follow commonmark nesting rules\n            line = line.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n          }\n\n          // End list item if found start of new bullet\n          if (nextBulletRegex.test(line)) {\n            raw = cap[1] + lines.slice(0, i).join('\\n') + '\\n';\n            break;\n          }\n\n          // Until we encounter a blank line, item contents do not need indentation\n          if (!blankLine) {\n            if (!line.trim()) { // Check if current line is empty\n              blankLine = true;\n            }\n\n            // Dedent if possible\n            if (line.search(/[^ ]/) >= indent) {\n              itemContents += '\\n' + line.slice(indent);\n            } else {\n              itemContents += '\\n' + line;\n            }\n            continue;\n          }\n\n          // Dedent this line\n          if (line.search(/[^ ]/) >= indent || !line.trim()) {\n            itemContents += '\\n' + line.slice(indent);\n            continue;\n          } else { // Line was not properly indented; end of this item\n            raw = cap[1] + lines.slice(0, i).join('\\n') + '\\n';\n            break;\n          }\n        }\n\n        if (!list.loose) {\n          // If the previous item ended with a blank line, the list is loose\n          if (endsWithBlankLine) {\n            list.loose = true;\n          } else if (/\\n *\\n *$/.test(raw)) {\n            endsWithBlankLine = true;\n          }\n        }\n\n        // Check for task list items\n        if (this.options.gfm) {\n          istask = /^\\[[ xX]\\] /.exec(itemContents);\n          if (istask) {\n            ischecked = istask[0] !== '[ ] ';\n            itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n          }\n        }\n\n        list.items.push({\n          type: 'list_item',\n          raw: raw,\n          task: !!istask,\n          checked: ischecked,\n          loose: false,\n          text: itemContents\n        });\n\n        list.raw += raw;\n        src = src.slice(raw.length);\n      }\n\n      // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n      list.items[list.items.length - 1].raw = raw.trimRight();\n      list.items[list.items.length - 1].text = itemContents.trimRight();\n      list.raw = list.raw.trimRight();\n\n      const l = list.items.length;\n\n      // Item child tokens handled here at end because we needed to have the final item to trim it first\n      for (i = 0; i < l; i++) {\n        this.lexer.state.top = false;\n        list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n        if (list.items[i].tokens.some(t => t.type === 'space')) {\n          list.loose = true;\n          list.items[i].loose = true;\n        }\n      }\n\n      return list;\n    }\n  }\n\n  html(src) {\n    const cap = this.rules.block.html.exec(src);\n    if (cap) {\n      const token = {\n        type: 'html',\n        raw: cap[0],\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      };\n      if (this.options.sanitize) {\n        token.type = 'paragraph';\n        token.text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n        token.tokens = [];\n        this.lexer.inline(token.text, token.tokens);\n      }\n      return token;\n    }\n  }\n\n  def(src) {\n    const cap = this.rules.block.def.exec(src);\n    if (cap) {\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      return {\n        type: 'def',\n        tag,\n        raw: cap[0],\n        href: cap[2],\n        title: cap[3]\n      };\n    }\n  }\n\n  table(src) {\n    const cap = this.rules.block.table.exec(src);\n    if (cap) {\n      const item = {\n        type: 'table',\n        header: splitCells(cap[1]).map(c => { return { text: c }; }),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        rows: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        item.raw = cap[0];\n\n        let l = item.align.length;\n        let i, j, k, row;\n        for (i = 0; i < l; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        l = item.rows.length;\n        for (i = 0; i < l; i++) {\n          item.rows[i] = splitCells(item.rows[i], item.header.length).map(c => { return { text: c }; });\n        }\n\n        // parse child tokens inside headers and cells\n\n        // header child tokens\n        l = item.header.length;\n        for (j = 0; j < l; j++) {\n          item.header[j].tokens = [];\n          this.lexer.inlineTokens(item.header[j].text, item.header[j].tokens);\n        }\n\n        // cell child tokens\n        l = item.rows.length;\n        for (j = 0; j < l; j++) {\n          row = item.rows[j];\n          for (k = 0; k < row.length; k++) {\n            row[k].tokens = [];\n            this.lexer.inlineTokens(row[k].text, row[k].tokens);\n          }\n        }\n\n        return item;\n      }\n    }\n  }\n\n  lheading(src) {\n    const cap = this.rules.block.lheading.exec(src);\n    if (cap) {\n      const token = {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1],\n        tokens: []\n      };\n      this.lexer.inline(token.text, token.tokens);\n      return token;\n    }\n  }\n\n  paragraph(src) {\n    const cap = this.rules.block.paragraph.exec(src);\n    if (cap) {\n      const token = {\n        type: 'paragraph',\n        raw: cap[0],\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1],\n        tokens: []\n      };\n      this.lexer.inline(token.text, token.tokens);\n      return token;\n    }\n  }\n\n  text(src) {\n    const cap = this.rules.block.text.exec(src);\n    if (cap) {\n      const token = {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0],\n        tokens: []\n      };\n      this.lexer.inline(token.text, token.tokens);\n      return token;\n    }\n  }\n\n  escape(src) {\n    const cap = this.rules.inline.escape.exec(src);\n    if (cap) {\n      return {\n        type: 'escape',\n        raw: cap[0],\n        text: escape(cap[1])\n      };\n    }\n  }\n\n  tag(src) {\n    const cap = this.rules.inline.tag.exec(src);\n    if (cap) {\n      if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n        this.lexer.state.inLink = true;\n      } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.lexer.state.inLink = false;\n      }\n      if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = true;\n      } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = false;\n      }\n\n      return {\n        type: this.options.sanitize\n          ? 'text'\n          : 'html',\n        raw: cap[0],\n        inLink: this.lexer.state.inLink,\n        inRawBlock: this.lexer.state.inRawBlock,\n        text: this.options.sanitize\n          ? (this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0]))\n          : cap[0]\n      };\n    }\n  }\n\n  link(src) {\n    const cap = this.rules.inline.link.exec(src);\n    if (cap) {\n      const trimmedUrl = cap[2].trim();\n      if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n        // commonmark requires matching angle brackets\n        if (!(/>$/.test(trimmedUrl))) {\n          return;\n        }\n\n        // ending angle bracket cannot be escaped\n        const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n          return;\n        }\n      } else {\n        // find closing parenthesis\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n      }\n      let href = cap[2];\n      let title = '';\n      if (this.options.pedantic) {\n        // split pedantic href and title\n        const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n\n      href = href.trim();\n      if (/^</.test(href)) {\n        if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n          // pedantic allows starting angle bracket without ending angle bracket\n          href = href.slice(1);\n        } else {\n          href = href.slice(1, -1);\n        }\n      }\n      return outputLink(cap, {\n        href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n        title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n      }, cap[0], this.lexer);\n    }\n  }\n\n  reflink(src, links) {\n    let cap;\n    if ((cap = this.rules.inline.reflink.exec(src))\n        || (cap = this.rules.inline.nolink.exec(src))) {\n      let link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = links[link.toLowerCase()];\n      if (!link || !link.href) {\n        const text = cap[0].charAt(0);\n        return {\n          type: 'text',\n          raw: text,\n          text\n        };\n      }\n      return outputLink(cap, link, cap[0], this.lexer);\n    }\n  }\n\n  emStrong(src, maskedSrc, prevChar = '') {\n    let match = this.rules.inline.emStrong.lDelim.exec(src);\n    if (!match) return;\n\n    // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n    if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u)) return;\n\n    const nextChar = match[1] || match[2] || '';\n\n    if (!nextChar || (nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar)))) {\n      const lLength = match[0].length - 1;\n      let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n\n      const endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n      endReg.lastIndex = 0;\n\n      // Clip maskedSrc to same section of string as src (move to lexer?)\n      maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n      while ((match = endReg.exec(maskedSrc)) != null) {\n        rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n\n        if (!rDelim) continue; // skip single * in __abc*abc__\n\n        rLength = rDelim.length;\n\n        if (match[3] || match[4]) { // found another Left Delim\n          delimTotal += rLength;\n          continue;\n        } else if (match[5] || match[6]) { // either Left or Right Delim\n          if (lLength % 3 && !((lLength + rLength) % 3)) {\n            midDelimTotal += rLength;\n            continue; // CommonMark Emphasis Rules 9-10\n          }\n        }\n\n        delimTotal -= rLength;\n\n        if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n\n        // Remove extra characters. *a*** -> *a*\n        rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n\n        // Create `em` if smallest delimiter has odd char count. *a***\n        if (Math.min(lLength, rLength) % 2) {\n          const text = src.slice(1, lLength + match.index + rLength);\n          return {\n            type: 'em',\n            raw: src.slice(0, lLength + match.index + rLength + 1),\n            text,\n            tokens: this.lexer.inlineTokens(text, [])\n          };\n        }\n\n        // Create 'strong' if smallest delimiter has even char count. **a***\n        const text = src.slice(2, lLength + match.index + rLength - 1);\n        return {\n          type: 'strong',\n          raw: src.slice(0, lLength + match.index + rLength + 1),\n          text,\n          tokens: this.lexer.inlineTokens(text, [])\n        };\n      }\n    }\n  }\n\n  codespan(src) {\n    const cap = this.rules.inline.code.exec(src);\n    if (cap) {\n      let text = cap[2].replace(/\\n/g, ' ');\n      const hasNonSpaceChars = /[^ ]/.test(text);\n      const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n      if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n        text = text.substring(1, text.length - 1);\n      }\n      text = escape(text, true);\n      return {\n        type: 'codespan',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n\n  br(src) {\n    const cap = this.rules.inline.br.exec(src);\n    if (cap) {\n      return {\n        type: 'br',\n        raw: cap[0]\n      };\n    }\n  }\n\n  del(src) {\n    const cap = this.rules.inline.del.exec(src);\n    if (cap) {\n      return {\n        type: 'del',\n        raw: cap[0],\n        text: cap[2],\n        tokens: this.lexer.inlineTokens(cap[2], [])\n      };\n    }\n  }\n\n  autolink(src, mangle) {\n    const cap = this.rules.inline.autolink.exec(src);\n    if (cap) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  url(src, mangle) {\n    let cap;\n    if (cap = this.rules.inline.url.exec(src)) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        let prevCapZero;\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  inlineText(src, smartypants) {\n    const cap = this.rules.inline.text.exec(src);\n    if (cap) {\n      let text;\n      if (this.lexer.state.inRawBlock) {\n        text = this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0];\n      } else {\n        text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n      }\n      return {\n        type: 'text',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n}\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^(?: *(?:\\n|$))+/,\n  code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n  fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3}bull)( [^\\n]+?)?(?:\\n|$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noopTest,\n  lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html| +\\n)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nblock.listItemStart = edit(/^( *)(bull) */)\n  .replace('bull', block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n});\n\nblock.gfm.table = edit(block.gfm.table)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n});\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n  nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n  reflinkSearch: 'reflink|nolink(?!\\\\()',\n  emStrong: {\n    lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n    //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n    //        () Skip orphan delim inside strong    (1) #***                (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n    rDelimAst: /^[^_*]*?\\_\\_[^_*]*?\\*[^_*]*?(?=\\_\\_)|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n    rDelimUnd: /^[^_*]*?\\*\\*[^_*]*?\\_[^_*]*?(?=\\*\\*)|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n  },\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n  punctuation: /^([\\spunctuation])/\n};\n\n// list of punctuation marks from CommonMark spec\n// without * and _ to handle the different emphasis markers * and _\ninline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\ninline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex();\n\n// sequences em should skip over [title](link), `code`, <html>\ninline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\ninline.escapedEmSt = /\\\\\\*|\\\\_/g;\n\ninline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n\ninline.emStrong.lDelim = edit(inline.emStrong.lDelim)\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', inline._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .getRegex();\n\ninline.reflinkSearch = edit(inline.reflinkSearch, 'g')\n  .replace('reflink', inline.reflink)\n  .replace('nolink', inline.nolink)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: {\n    start: /^__|\\*\\*/,\n    middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    endAst: /\\*\\*(?!\\*)/g,\n    endUnd: /__(?!_)/g\n  },\n  em: {\n    start: /^_|\\*/,\n    middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n    endAst: /\\*(?!\\*)/g,\n    endUnd: /_(?!_)/g\n  },\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n  text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n});\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n});\n\n/**\n * smartypants text replacement\n */\nfunction smartypants(text) {\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n}\n\n/**\n * mangle email addresses\n */\nfunction mangle(text) {\n  let out = '',\n    i,\n    ch;\n\n  const l = text.length;\n  for (i = 0; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n}\n\n/**\n * Block Lexer\n */\nclass Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n    this.tokenizer = this.options.tokenizer;\n    this.tokenizer.options = this.options;\n    this.tokenizer.lexer = this;\n    this.inlineQueue = [];\n    this.state = {\n      inLink: false,\n      inRawBlock: false,\n      top: true\n    };\n\n    const rules = {\n      block: block.normal,\n      inline: inline.normal\n    };\n\n    if (this.options.pedantic) {\n      rules.block = block.pedantic;\n      rules.inline = inline.pedantic;\n    } else if (this.options.gfm) {\n      rules.block = block.gfm;\n      if (this.options.breaks) {\n        rules.inline = inline.breaks;\n      } else {\n        rules.inline = inline.gfm;\n      }\n    }\n    this.tokenizer.rules = rules;\n  }\n\n  /**\n   * Expose Rules\n   */\n  static get rules() {\n    return {\n      block,\n      inline\n    };\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  }\n\n  /**\n   * Static Lex Inline Method\n   */\n  static lexInline(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.inlineTokens(src);\n  }\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n')\n      .replace(/\\t/g, '    ');\n\n    this.blockTokens(src, this.tokens);\n\n    let next;\n    while (next = this.inlineQueue.shift()) {\n      this.inlineTokens(next.src, next.tokens);\n    }\n\n    return this.tokens;\n  }\n\n  /**\n   * Lexing\n   */\n  blockTokens(src, tokens = []) {\n    if (this.options.pedantic) {\n      src = src.replace(/^ +$/gm, '');\n    }\n    let token, lastToken, cutSrc, lastParagraphClipped;\n\n    while (src) {\n      if (this.options.extensions\n        && this.options.extensions.block\n        && this.options.extensions.block.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // newline\n      if (token = this.tokenizer.space(src)) {\n        src = src.substring(token.raw.length);\n        if (token.type) {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.code(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // fences\n      if (token = this.tokenizer.fences(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // heading\n      if (token = this.tokenizer.heading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // hr\n      if (token = this.tokenizer.hr(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // blockquote\n      if (token = this.tokenizer.blockquote(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // list\n      if (token = this.tokenizer.list(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // html\n      if (token = this.tokenizer.html(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // def\n      if (token = this.tokenizer.def(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.raw;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else if (!this.tokens.links[token.tag]) {\n          this.tokens.links[token.tag] = {\n            href: token.href,\n            title: token.title\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (token = this.tokenizer.table(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // lheading\n      if (token = this.tokenizer.lheading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // top-level paragraph\n      // prevent paragraph consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startBlock) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startBlock.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n        lastToken = tokens[tokens.length - 1];\n        if (lastParagraphClipped && lastToken.type === 'paragraph') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        lastParagraphClipped = (cutSrc.length !== src.length);\n        src = src.substring(token.raw.length);\n        continue;\n      }\n\n      // text\n      if (token = this.tokenizer.text(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    this.state.top = true;\n    return tokens;\n  }\n\n  inline(src, tokens) {\n    this.inlineQueue.push({ src, tokens });\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  inlineTokens(src, tokens = []) {\n    let token, lastToken, cutSrc;\n\n    // String with links masked to avoid interference with em and strong\n    let maskedSrc = src;\n    let match;\n    let keepPrevChar, prevChar;\n\n    // Mask out reflinks\n    if (this.tokens.links) {\n      const links = Object.keys(this.tokens.links);\n      if (links.length > 0) {\n        while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n          if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n          }\n        }\n      }\n    }\n    // Mask out other blocks\n    while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n    }\n\n    // Mask out escaped em & strong delimiters\n    while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n    }\n\n    while (src) {\n      if (!keepPrevChar) {\n        prevChar = '';\n      }\n      keepPrevChar = false;\n\n      // extensions\n      if (this.options.extensions\n        && this.options.extensions.inline\n        && this.options.extensions.inline.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // escape\n      if (token = this.tokenizer.escape(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // tag\n      if (token = this.tokenizer.tag(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // link\n      if (token = this.tokenizer.link(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // reflink, nolink\n      if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // em & strong\n      if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.codespan(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // br\n      if (token = this.tokenizer.br(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // del (gfm)\n      if (token = this.tokenizer.del(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // autolink\n      if (token = this.tokenizer.autolink(src, mangle)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // text\n      // prevent inlineText consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startInline) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startInline.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n          prevChar = token.raw.slice(-1);\n        }\n        keepPrevChar = true;\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    return tokens;\n  }\n}\n\n/**\n * Renderer\n */\nclass Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    code = code.replace(/\\n$/, '') + '\\n';\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>\\n';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang, true)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  }\n\n  blockquote(quote) {\n    return '<blockquote>\\n' + quote + '</blockquote>\\n';\n  }\n\n  html(html) {\n    return html;\n  }\n\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      return '<h'\n        + level\n        + ' id=\"'\n        + this.options.headerPrefix\n        + slugger.slug(raw)\n        + '\">'\n        + text\n        + '</h'\n        + level\n        + '>\\n';\n    }\n    // ignore IDs\n    return '<h' + level + '>' + text + '</h' + level + '>\\n';\n  }\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  }\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  }\n\n  listitem(text) {\n    return '<li>' + text + '</li>\\n';\n  }\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  }\n\n  paragraph(text) {\n    return '<p>' + text + '</p>\\n';\n  }\n\n  table(header, body) {\n    if (body) body = '<tbody>' + body + '</tbody>';\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  }\n\n  tablerow(content) {\n    return '<tr>\\n' + content + '</tr>\\n';\n  }\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? '<' + type + ' align=\"' + flags.align + '\">'\n      : '<' + type + '>';\n    return tag + content + '</' + type + '>\\n';\n  }\n\n  // span level renderer\n  strong(text) {\n    return '<strong>' + text + '</strong>';\n  }\n\n  em(text) {\n    return '<em>' + text + '</em>';\n  }\n\n  codespan(text) {\n    return '<code>' + text + '</code>';\n  }\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  }\n\n  del(text) {\n    return '<del>' + text + '</del>';\n  }\n\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + escape(href) + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  }\n\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  }\n\n  text(text) {\n    return text;\n  }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  html(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n}\n\n/**\n * Slugger generates header id\n */\nclass Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  serialize(value) {\n    return value\n      .toLowerCase()\n      .trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n  }\n\n  /**\n   * Finds the next safe (unique) slug to use\n   */\n  getNextSafeSlug(originalSlug, isDryRun) {\n    let slug = originalSlug;\n    let occurenceAccumulator = 0;\n    if (this.seen.hasOwnProperty(slug)) {\n      occurenceAccumulator = this.seen[originalSlug];\n      do {\n        occurenceAccumulator++;\n        slug = originalSlug + '-' + occurenceAccumulator;\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    if (!isDryRun) {\n      this.seen[originalSlug] = occurenceAccumulator;\n      this.seen[slug] = 0;\n    }\n    return slug;\n  }\n\n  /**\n   * Convert string to unique id\n   * @param {object} options\n   * @param {boolean} options.dryrun Generates the next unique slug without updating the internal accumulator.\n   */\n  slug(value, options = {}) {\n    const slug = this.serialize(value);\n    return this.getNextSafeSlug(slug, options.dryrun);\n  }\n}\n\n/**\n * Parsing & Compiling\n */\nclass Parser {\n  constructor(options) {\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.textRenderer = new TextRenderer();\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  }\n\n  /**\n   * Static Parse Inline Method\n   */\n  static parseInline(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parseInline(tokens);\n  }\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens, top = true) {\n    let out = '',\n      i,\n      j,\n      k,\n      l2,\n      l3,\n      row,\n      cell,\n      header,\n      body,\n      token,\n      ordered,\n      start,\n      loose,\n      itemBody,\n      item,\n      checked,\n      task,\n      checkbox,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'space': {\n          continue;\n        }\n        case 'hr': {\n          out += this.renderer.hr();\n          continue;\n        }\n        case 'heading': {\n          out += this.renderer.heading(\n            this.parseInline(token.tokens),\n            token.depth,\n            unescape(this.parseInline(token.tokens, this.textRenderer)),\n            this.slugger);\n          continue;\n        }\n        case 'code': {\n          out += this.renderer.code(token.text,\n            token.lang,\n            token.escaped);\n          continue;\n        }\n        case 'table': {\n          header = '';\n\n          // header\n          cell = '';\n          l2 = token.header.length;\n          for (j = 0; j < l2; j++) {\n            cell += this.renderer.tablecell(\n              this.parseInline(token.header[j].tokens),\n              { header: true, align: token.align[j] }\n            );\n          }\n          header += this.renderer.tablerow(cell);\n\n          body = '';\n          l2 = token.rows.length;\n          for (j = 0; j < l2; j++) {\n            row = token.rows[j];\n\n            cell = '';\n            l3 = row.length;\n            for (k = 0; k < l3; k++) {\n              cell += this.renderer.tablecell(\n                this.parseInline(row[k].tokens),\n                { header: false, align: token.align[k] }\n              );\n            }\n\n            body += this.renderer.tablerow(cell);\n          }\n          out += this.renderer.table(header, body);\n          continue;\n        }\n        case 'blockquote': {\n          body = this.parse(token.tokens);\n          out += this.renderer.blockquote(body);\n          continue;\n        }\n        case 'list': {\n          ordered = token.ordered;\n          start = token.start;\n          loose = token.loose;\n          l2 = token.items.length;\n\n          body = '';\n          for (j = 0; j < l2; j++) {\n            item = token.items[j];\n            checked = item.checked;\n            task = item.task;\n\n            itemBody = '';\n            if (item.task) {\n              checkbox = this.renderer.checkbox(checked);\n              if (loose) {\n                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                  item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                  if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                    item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                  }\n                } else {\n                  item.tokens.unshift({\n                    type: 'text',\n                    text: checkbox\n                  });\n                }\n              } else {\n                itemBody += checkbox;\n              }\n            }\n\n            itemBody += this.parse(item.tokens, loose);\n            body += this.renderer.listitem(itemBody, task, checked);\n          }\n\n          out += this.renderer.list(body, ordered, start);\n          continue;\n        }\n        case 'html': {\n          // TODO parse inline content if parameter markdown=1\n          out += this.renderer.html(token.text);\n          continue;\n        }\n        case 'paragraph': {\n          out += this.renderer.paragraph(this.parseInline(token.tokens));\n          continue;\n        }\n        case 'text': {\n          body = token.tokens ? this.parseInline(token.tokens) : token.text;\n          while (i + 1 < l && tokens[i + 1].type === 'text') {\n            token = tokens[++i];\n            body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n          }\n          out += top ? this.renderer.paragraph(body) : body;\n          continue;\n        }\n\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n\n    return out;\n  }\n\n  /**\n   * Parse Inline Tokens\n   */\n  parseInline(tokens, renderer) {\n    renderer = renderer || this.renderer;\n    let out = '',\n      i,\n      token,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'escape': {\n          out += renderer.text(token.text);\n          break;\n        }\n        case 'html': {\n          out += renderer.html(token.text);\n          break;\n        }\n        case 'link': {\n          out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'image': {\n          out += renderer.image(token.href, token.title, token.text);\n          break;\n        }\n        case 'strong': {\n          out += renderer.strong(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'em': {\n          out += renderer.em(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'codespan': {\n          out += renderer.codespan(token.text);\n          break;\n        }\n        case 'br': {\n          out += renderer.br();\n          break;\n        }\n        case 'del': {\n          out += renderer.del(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'text': {\n          out += renderer.text(token.text);\n          break;\n        }\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n    return out;\n  }\n}\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (typeof opt === 'function') {\n    callback = opt;\n    opt = null;\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  if (callback) {\n    const highlight = opt.highlight;\n    let tokens;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    const done = function(err) {\n      let out;\n\n      if (!err) {\n        try {\n          if (opt.walkTokens) {\n            marked.walkTokens(tokens, opt.walkTokens);\n          }\n          out = Parser.parse(tokens, opt);\n        } catch (e) {\n          err = e;\n        }\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!tokens.length) return done();\n\n    let pending = 0;\n    marked.walkTokens(tokens, function(token) {\n      if (token.type === 'code') {\n        pending++;\n        setTimeout(() => {\n          highlight(token.text, token.lang, function(err, code) {\n            if (err) {\n              return done(err);\n            }\n            if (code != null && code !== token.text) {\n              token.text = code;\n              token.escaped = true;\n            }\n\n            pending--;\n            if (pending === 0) {\n              done();\n            }\n          });\n        }, 0);\n      }\n    });\n\n    if (pending === 0) {\n      done();\n    }\n\n    return;\n  }\n\n  try {\n    const tokens = Lexer.lex(src, opt);\n    if (opt.walkTokens) {\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parse(tokens, opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Use Extension\n */\n\nmarked.use = function(...args) {\n  const opts = merge({}, ...args);\n  const extensions = marked.defaults.extensions || { renderers: {}, childTokens: {} };\n  let hasExtensions;\n\n  args.forEach((pack) => {\n    // ==-- Parse \"addon\" extensions --== //\n    if (pack.extensions) {\n      hasExtensions = true;\n      pack.extensions.forEach((ext) => {\n        if (!ext.name) {\n          throw new Error('extension name required');\n        }\n        if (ext.renderer) { // Renderer extensions\n          const prevRenderer = extensions.renderers ? extensions.renderers[ext.name] : null;\n          if (prevRenderer) {\n            // Replace extension with func to run new extension but fall back if false\n            extensions.renderers[ext.name] = function(...args) {\n              let ret = ext.renderer.apply(this, args);\n              if (ret === false) {\n                ret = prevRenderer.apply(this, args);\n              }\n              return ret;\n            };\n          } else {\n            extensions.renderers[ext.name] = ext.renderer;\n          }\n        }\n        if (ext.tokenizer) { // Tokenizer Extensions\n          if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n            throw new Error(\"extension level must be 'block' or 'inline'\");\n          }\n          if (extensions[ext.level]) {\n            extensions[ext.level].unshift(ext.tokenizer);\n          } else {\n            extensions[ext.level] = [ext.tokenizer];\n          }\n          if (ext.start) { // Function to check for start of token\n            if (ext.level === 'block') {\n              if (extensions.startBlock) {\n                extensions.startBlock.push(ext.start);\n              } else {\n                extensions.startBlock = [ext.start];\n              }\n            } else if (ext.level === 'inline') {\n              if (extensions.startInline) {\n                extensions.startInline.push(ext.start);\n              } else {\n                extensions.startInline = [ext.start];\n              }\n            }\n          }\n        }\n        if (ext.childTokens) { // Child tokens to be visited by walkTokens\n          extensions.childTokens[ext.name] = ext.childTokens;\n        }\n      });\n    }\n\n    // ==-- Parse \"overwrite\" extensions --== //\n    if (pack.renderer) {\n      const renderer = marked.defaults.renderer || new Renderer();\n      for (const prop in pack.renderer) {\n        const prevRenderer = renderer[prop];\n        // Replace renderer with func to run extension, but fall back if false\n        renderer[prop] = (...args) => {\n          let ret = pack.renderer[prop].apply(renderer, args);\n          if (ret === false) {\n            ret = prevRenderer.apply(renderer, args);\n          }\n          return ret;\n        };\n      }\n      opts.renderer = renderer;\n    }\n    if (pack.tokenizer) {\n      const tokenizer = marked.defaults.tokenizer || new Tokenizer();\n      for (const prop in pack.tokenizer) {\n        const prevTokenizer = tokenizer[prop];\n        // Replace tokenizer with func to run extension, but fall back if false\n        tokenizer[prop] = (...args) => {\n          let ret = pack.tokenizer[prop].apply(tokenizer, args);\n          if (ret === false) {\n            ret = prevTokenizer.apply(tokenizer, args);\n          }\n          return ret;\n        };\n      }\n      opts.tokenizer = tokenizer;\n    }\n\n    // ==-- Parse WalkTokens extensions --== //\n    if (pack.walkTokens) {\n      const walkTokens = marked.defaults.walkTokens;\n      opts.walkTokens = function(token) {\n        pack.walkTokens.call(this, token);\n        if (walkTokens) {\n          walkTokens.call(this, token);\n        }\n      };\n    }\n\n    if (hasExtensions) {\n      opts.extensions = extensions;\n    }\n\n    marked.setOptions(opts);\n  });\n};\n\n/**\n * Run callback for every token\n */\n\nmarked.walkTokens = function(tokens, callback) {\n  for (const token of tokens) {\n    callback.call(marked, token);\n    switch (token.type) {\n      case 'table': {\n        for (const cell of token.header) {\n          marked.walkTokens(cell.tokens, callback);\n        }\n        for (const row of token.rows) {\n          for (const cell of row) {\n            marked.walkTokens(cell.tokens, callback);\n          }\n        }\n        break;\n      }\n      case 'list': {\n        marked.walkTokens(token.items, callback);\n        break;\n      }\n      default: {\n        if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) { // Walk any extensions\n          marked.defaults.extensions.childTokens[token.type].forEach(function(childTokens) {\n            marked.walkTokens(token[childTokens], callback);\n          });\n        } else if (token.tokens) {\n          marked.walkTokens(token.tokens, callback);\n        }\n      }\n    }\n  }\n};\n\n/**\n * Parse Inline\n */\nmarked.parseInline = function(src, opt) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked.parseInline(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked.parseInline(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  try {\n    const tokens = Lexer.lexInline(src, opt);\n    if (opt.walkTokens) {\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parseInline(tokens, opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n};\n\n/**\n * Expose\n */\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\nmarked.Tokenizer = Tokenizer;\nmarked.Slugger = Slugger;\nmarked.parse = marked;\n\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = Parser.parse;\nconst lexer = Lexer.lex;\n\nexport { Lexer, Parser, Renderer, Slugger, TextRenderer, Tokenizer, defaults, getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n","<script>\n  import Editor from './Editor.svelte';\n  import Preview from './Preview.svelte';\n  import { getInitialValue } from './utils.js';\n  import { marked } from 'marked';\n\n  // initialize a variable through the value obtained from local storage or from the fallback string\n  let markdown = getInitialValue();\n\n  // boolean toggling between the two components\n  let showPreview = false;\n\n  // when receiving the edit event update the boolean to show the editor component\n  function handleEdit() {\n    showPreview = false;\n  }\n  // when receiving the preview event update the markdown and the boolean to show the preview component\n  function handlePreview(e) {\n    // sanitize the string with DOMpurify\n    markdown = DOMPurify.sanitize(e.detail);\n    showPreview = true;\n  }\n</script>\n<div class=\"markdown-editor\">\n  {#if showPreview}\n    <Preview markup={marked(markdown)} on:edit={handleEdit} />\n  {:else}\n    <Editor {markdown} on:preview={handlePreview} />\n  {/if}\n</div>\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_input_value","input","HtmlTag","constructor","this","e","n","c","html","h","m","nodeName","t","i","innerHTML","Array","from","childNodes","length","p","d","current_component","set_current_component","component","createEventDispatcher","Error","get_current_component","type","detail","callbacks","$$","bubbles","createEvent","initCustomEvent","custom_event","slice","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","flushing","seen_callbacks","Set","flush","update","pop","callback","has","add","clear","fragment","before_update","dirty","ctx","after_update","outroing","outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","customElement","on_mount","on_destroy","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","children","l","intro","SvelteComponent","$destroy","$on","index","indexOf","splice","$set","$$props","obj","$$set","keys","getInitialValue","key","localStorage","getItem","dispatch","textarea","markdown","updateValue","string","selectionEnd","isSaved","setItem","DOMPurify","sanitize","markup","getDefaults","baseUrl","breaks","extensions","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitizer","silent","smartLists","smartypants","tokenizer","walkTokens","xhtml","defaults","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape","encode","test","replace","unescapeTest","unescape","_","toLowerCase","charAt","String","fromCharCode","parseInt","substring","caret","edit","regex","opt","source","val","getRegex","RegExp","nonWordAndColonTest","originIndependentUrl","cleanUrl","base","href","prot","decodeURIComponent","baseUrls","justDomain","rtrim","relativeBase","protocol","domain","resolveUrl","encodeURI","noopTest","exec","merge","arguments","prototype","hasOwnProperty","splitCells","tableRow","count","cells","match","offset","str","escaped","curr","split","trim","shift","invert","suffLen","currChar","substr","checkSanitizeDeprecation","console","warn","repeatString","pattern","result","outputLink","cap","link","raw","lexer","title","state","inLink","token","tokens","inlineTokens","Tokenizer","src","rules","newline","code","codeBlockStyle","fences","matchIndentToCode","indentToCode","matchIndentInNode","indentInNode","join","indentCodeCompensation","lang","heading","trimmed","depth","inline","hr","blockquote","blockTokens","list","istask","ischecked","indent","blankLine","endsWithBlankLine","line","lines","itemContents","bull","isordered","ordered","start","loose","items","itemRegex","trimLeft","search","nextBulletRegex","Math","min","task","checked","trimRight","top","some","pre","def","tag","table","item","header","align","rows","j","k","row","lheading","paragraph","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","level","findClosingBracket","linkLen","_escapes","reflink","links","nolink","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","url","prevCapZero","_backpedal","inlineText","_paragraph","_label","_title","bullet","listItemStart","_tag","_comment","normal","reflinkSearch","out","charCodeAt","random","toString","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","Lexer","inlineQueue","static","lex","next","lastToken","cutSrc","lastParagraphClipped","extTokenizer","startBlock","startIndex","Infinity","tempSrc","tempStart","getStartIndex","errMsg","error","keepPrevChar","includes","lastIndexOf","startInline","Renderer","infostring","quote","slugger","slug","body","listitem","checkbox","tablerow","content","tablecell","flags","image","TextRenderer","Slugger","seen","serialize","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","dryrun","Parser","textRenderer","parse","parseInline","l2","l3","cell","itemBody","renderers","parser","unshift","marked","done","err","pending","setTimeout","message","r","showPreview","setOptions","newDefaults","use","args","opts","childTokens","hasExtensions","pack","ext","prevRenderer","apply","prop","prevTokenizer","lexInline"],"mappings":"gCAAA,SAASA,KAgBT,SAASC,EAAIC,GACT,OAAOA,IAEX,SAASC,IACL,OAAOC,OAAOC,OAAO,MAEzB,SAASC,EAAQC,GACbA,EAAIC,QAAQP,GAEhB,SAASQ,EAAYC,GACjB,MAAwB,mBAAVA,EAElB,SAASC,EAAeC,EAAGC,GACvB,OAAOD,GAAKA,EAAIC,GAAKA,EAAID,IAAMC,GAAOD,GAAkB,iBAANA,GAAgC,mBAANA,EAsRhF,SAASE,EAAOC,EAAQC,GACpBD,EAAOE,YAAYD,GAoDvB,SAASE,EAAOH,EAAQC,EAAMG,GAC1BJ,EAAOK,aAAaJ,EAAMG,GAAU,MAUxC,SAASE,EAAOL,GACZA,EAAKM,WAAWC,YAAYP,GAQhC,SAASQ,EAAQC,GACb,OAAOC,SAASC,cAAcF,GAoBlC,SAASG,EAAKC,GACV,OAAOH,SAASI,eAAeD,GAEnC,SAASE,IACL,OAAOH,EAAK,KAKhB,SAASI,EAAOhB,EAAMiB,EAAOC,EAASC,GAElC,OADAnB,EAAKoB,iBAAiBH,EAAOC,EAASC,GAC/B,IAAMnB,EAAKqB,oBAAoBJ,EAAOC,EAASC,GA8B1D,SAASG,EAAKtB,EAAMuB,EAAWC,GACd,MAATA,EACAxB,EAAKyB,gBAAgBF,GAChBvB,EAAK0B,aAAaH,KAAeC,GACtCxB,EAAK2B,aAAaJ,EAAWC,GA0LrC,SAASI,EAAgBC,EAAOL,GAC5BK,EAAML,MAAiB,MAATA,EAAgB,GAAKA,EAoGvC,MAAMM,EACFC,cACIC,KAAKC,EAAID,KAAKE,EAAI,KAEtBC,EAAEC,GACEJ,KAAKK,EAAED,GAEXE,EAAEF,EAAMrC,EAAQI,EAAS,MAChB6B,KAAKC,IACND,KAAKC,EAAIzB,EAAQT,EAAOwC,UACxBP,KAAKQ,EAAIzC,EACTiC,KAAKG,EAAEC,IAEXJ,KAAKS,EAAEtC,GAEXkC,EAAED,GACEJ,KAAKC,EAAES,UAAYN,EACnBJ,KAAKE,EAAIS,MAAMC,KAAKZ,KAAKC,EAAEY,YAE/BJ,EAAEtC,GACE,IAAK,IAAIsC,EAAI,EAAGA,EAAIT,KAAKE,EAAEY,OAAQL,GAAK,EACpCvC,EAAO8B,KAAKQ,EAAGR,KAAKE,EAAEO,GAAItC,GAGlC4C,EAAEX,GACEJ,KAAKgB,IACLhB,KAAKK,EAAED,GACPJ,KAAKS,EAAET,KAAKpC,GAEhBoD,IACIhB,KAAKE,EAAE1C,QAAQa,IAwKvB,IAAI4C,EACJ,SAASC,EAAsBC,GAC3BF,EAAoBE,EAmBxB,SAASC,IACL,MAAMD,EAlBV,WACI,IAAKF,EACD,MAAM,IAAII,MAAM,oDACpB,OAAOJ,EAeWK,GAClB,MAAO,CAACC,EAAMC,KACV,MAAMC,EAAYN,EAAUO,GAAGD,UAAUF,GACzC,GAAIE,EAAW,CAGX,MAAMxC,EA1OlB,SAAsBsC,EAAMC,EAAQG,GAAU,GAC1C,MAAM1B,EAAIvB,SAASkD,YAAY,eAE/B,OADA3B,EAAE4B,gBAAgBN,EAAMI,GAAS,EAAOH,GACjCvB,EAuOe6B,CAAaP,EAAMC,GACjCC,EAAUM,QAAQvE,SAAQN,IACtBA,EAAG8E,KAAKb,EAAWlC,QA4BnC,MAAMgD,EAAmB,GAEnBC,EAAoB,GACpBC,EAAmB,GACnBC,EAAkB,GAClBC,EAAmBC,QAAQC,UACjC,IAAIC,GAAmB,EAWvB,SAASC,EAAoBvF,GACzBiF,EAAiBO,KAAKxF,GAK1B,IAAIyF,GAAW,EACf,MAAMC,EAAiB,IAAIC,IAC3B,SAASC,IACL,IAAIH,EAAJ,CAEAA,GAAW,EACX,EAAG,CAGC,IAAK,IAAIlC,EAAI,EAAGA,EAAIwB,EAAiBnB,OAAQL,GAAK,EAAG,CACjD,MAAMU,EAAYc,EAAiBxB,GACnCS,EAAsBC,GACtB4B,EAAO5B,EAAUO,IAIrB,IAFAR,EAAsB,MACtBe,EAAiBnB,OAAS,EACnBoB,EAAkBpB,QACrBoB,EAAkBc,KAAlBd,GAIJ,IAAK,IAAIzB,EAAI,EAAGA,EAAI0B,EAAiBrB,OAAQL,GAAK,EAAG,CACjD,MAAMwC,EAAWd,EAAiB1B,GAC7BmC,EAAeM,IAAID,KAEpBL,EAAeO,IAAIF,GACnBA,KAGRd,EAAiBrB,OAAS,QACrBmB,EAAiBnB,QAC1B,KAAOsB,EAAgBtB,QACnBsB,EAAgBY,KAAhBZ,GAEJI,GAAmB,EACnBG,GAAW,EACXC,EAAeQ,SAEnB,SAASL,EAAOrB,GACZ,GAAoB,OAAhBA,EAAG2B,SAAmB,CACtB3B,EAAGqB,SACHzF,EAAQoE,EAAG4B,eACX,MAAMC,EAAQ7B,EAAG6B,MACjB7B,EAAG6B,MAAQ,EAAE,GACb7B,EAAG2B,UAAY3B,EAAG2B,SAAStC,EAAEW,EAAG8B,IAAKD,GACrC7B,EAAG+B,aAAajG,QAAQiF,IAiBhC,MAAMiB,EAAW,IAAIb,IACrB,IAAIc,EAcJ,SAASC,EAAcC,EAAOC,GACtBD,GAASA,EAAMpD,IACfiD,EAASK,OAAOF,GAChBA,EAAMpD,EAAEqD,IAGhB,SAASE,EAAeH,EAAOC,EAAOzF,EAAQ4E,GAC1C,GAAIY,GAASA,EAAMI,EAAG,CAClB,GAAIP,EAASR,IAAIW,GACb,OACJH,EAASP,IAAIU,GACbF,EAAOxD,EAAEuC,MAAK,KACVgB,EAASK,OAAOF,GACZZ,IACI5E,GACAwF,EAAM7C,EAAE,GACZiC,QAGRY,EAAMI,EAAEH,IAkmBhB,SAASI,EAAiBL,GACtBA,GAASA,EAAM1D,IAKnB,SAASgE,EAAgBhD,EAAWpD,EAAQI,EAAQiG,GAChD,MAAMf,SAAEA,EAAQgB,SAAEA,EAAQC,WAAEA,EAAUb,aAAEA,GAAiBtC,EAAUO,GACnE2B,GAAYA,EAAS/C,EAAEvC,EAAQI,GAC1BiG,GAED3B,GAAoB,KAChB,MAAM8B,EAAiBF,EAASG,IAAIvH,GAAKwH,OAAOhH,GAC5C6G,EACAA,EAAW5B,QAAQ6B,GAKnBjH,EAAQiH,GAEZpD,EAAUO,GAAG2C,SAAW,MAGhCZ,EAAajG,QAAQiF,GAEzB,SAASiC,EAAkBvD,EAAWwD,GAClC,MAAMjD,EAAKP,EAAUO,GACD,OAAhBA,EAAG2B,WACH/F,EAAQoE,EAAG4C,YACX5C,EAAG2B,UAAY3B,EAAG2B,SAASrC,EAAE2D,GAG7BjD,EAAG4C,WAAa5C,EAAG2B,SAAW,KAC9B3B,EAAG8B,IAAM,IAGjB,SAASoB,EAAWzD,EAAWV,IACI,IAA3BU,EAAUO,GAAG6B,MAAM,KACnBtB,EAAiBS,KAAKvB,GAxvBrBqB,IACDA,GAAmB,EACnBH,EAAiBwC,KAAK/B,IAwvBtB3B,EAAUO,GAAG6B,MAAMuB,KAAK,IAE5B3D,EAAUO,GAAG6B,MAAO9C,EAAI,GAAM,IAAO,GAAMA,EAAI,GAEnD,SAASsE,EAAK5D,EAAWhC,EAAS6F,EAAUC,EAAiBC,EAAWC,EAAOC,EAAe7B,EAAQ,EAAE,IACpG,MAAM8B,EAAmBpE,EACzBC,EAAsBC,GACtB,MAAMO,EAAKP,EAAUO,GAAK,CACtB2B,SAAU,KACVG,IAAK,KAEL2B,MAAAA,EACApC,OAAQ/F,EACRkI,UAAAA,EACAI,MAAOnI,IAEPkH,SAAU,GACVC,WAAY,GACZiB,cAAe,GACfjC,cAAe,GACfG,aAAc,GACd+B,QAAS,IAAIC,IAAItG,EAAQqG,UAAYH,EAAmBA,EAAiB3D,GAAG8D,QAAU,KAEtF/D,UAAWtE,IACXoG,MAAAA,EACAmC,YAAY,EACZC,KAAMxG,EAAQpB,QAAUsH,EAAiB3D,GAAGiE,MAEhDP,GAAiBA,EAAc1D,EAAGiE,MAClC,IAAIC,GAAQ,EAkBZ,GAjBAlE,EAAG8B,IAAMwB,EACHA,EAAS7D,EAAWhC,EAAQgG,OAAS,IAAI,CAAC1E,EAAGoF,KAAQC,KACnD,MAAMtG,EAAQsG,EAAKhF,OAASgF,EAAK,GAAKD,EAOtC,OANInE,EAAG8B,KAAO0B,EAAUxD,EAAG8B,IAAI/C,GAAIiB,EAAG8B,IAAI/C,GAAKjB,MACtCkC,EAAGgE,YAAchE,EAAG4D,MAAM7E,IAC3BiB,EAAG4D,MAAM7E,GAAGjB,GACZoG,GACAhB,EAAWzD,EAAWV,IAEvBoF,KAET,GACNnE,EAAGqB,SACH6C,GAAQ,EACRtI,EAAQoE,EAAG4B,eAEX5B,EAAG2B,WAAW4B,GAAkBA,EAAgBvD,EAAG8B,KAC/CrE,EAAQpB,OAAQ,CAChB,GAAIoB,EAAQ4G,QAAS,CAEjB,MAAMC,EAvxClB,SAAkBxH,GACd,OAAOmC,MAAMC,KAAKpC,EAAQqC,YAsxCJoF,CAAS9G,EAAQpB,QAE/B2D,EAAG2B,UAAY3B,EAAG2B,SAAS6C,EAAEF,GAC7BA,EAAMxI,QAAQa,QAIdqD,EAAG2B,UAAY3B,EAAG2B,SAASlD,IAE3BhB,EAAQgH,OACRvC,EAAczC,EAAUO,GAAG2B,UAC/Bc,EAAgBhD,EAAWhC,EAAQpB,OAAQoB,EAAQhB,OAAQgB,EAAQiF,eAEnEtB,IAEJ5B,EAAsBmE,GAkD1B,MAAMe,EACFC,WACI3B,EAAkB1E,KAAM,GACxBA,KAAKqG,SAAWrJ,EAEpBsJ,IAAI/E,EAAM0B,GACN,MAAMxB,EAAazB,KAAK0B,GAAGD,UAAUF,KAAUvB,KAAK0B,GAAGD,UAAUF,GAAQ,IAEzE,OADAE,EAAUiB,KAAKO,GACR,KACH,MAAMsD,EAAQ9E,EAAU+E,QAAQvD,IACjB,IAAXsD,GACA9E,EAAUgF,OAAOF,EAAO,IAGpCG,KAAKC,GAtzDT,IAAkBC,EAuzDN5G,KAAK6G,QAvzDCD,EAuzDkBD,EAtzDG,IAA5BvJ,OAAO0J,KAAKF,GAAK9F,UAuzDhBd,KAAK0B,GAAGgE,YAAa,EACrB1F,KAAK6G,MAAMF,GACX3G,KAAK0B,GAAGgE,YAAa,ICx1D1B,SAASqB,IACZ,OAIsBC,EAJE,mBAKjBC,aAAaC,QAAQF,IAjBX,gHAgBrB,IAA0BA,qCCkGf,0EAFM,iJAARxD,muBArBsC,kDAKA,kDAKA,kDAKA,qCAcA,wvCAxD/CtF,SACAJ,cAMAA,cAMAA,OACAA,OACAA,cACAA,OACEA,cAEAA,cASAA,cAKAA,cAKAA,cAKAA,0BAcAA,cASFA,iCAIAA,cAMAA,gBAQAI,4BAhEcsF,kBAQCA,kBAKAA,kBAKAA,kBAMDA,kBAcAA,qCAQyEA,uLAjI/E2D,EAAW/F,QAWbgG,YAJOC,KACP7H,EAAQ6H,WAMHC,EAAYC,sBACXC,GAAiBJ,MACzB5H,KAAWA,EAAMuC,MAAM,EAAGyF,KAAgBD,IAAS/H,EAAMuC,MACvDyF,UA2BAC,GAAU,2EApBZH,gCAMAA,EADa,2BAMbA,EADc,qDAMdA,EADgB,iBDnBb,IAAwBC,MC0B3BE,GAAU,GD1BiBF,EC2BZ/H,EDzBfyH,aAAaS,QAAQ,mBAAoBC,UAAUC,SAASL,cC6BzCtH,GACfwH,OACFA,GAAU,eAOZN,EAAS,UAAW3H,8CAqEgC4H,8lBFqR7CxI,EAAK,iFGhZhBV,SAEEJ,oBA2BK0F,oEAAAA,wFAnCC2D,EAAW/F,eAGNyG,gEAMOV,EAAS,8ECA7B,SAASW,IACP,MAAO,CACLC,QAAS,KACTC,QAAQ,EACRC,WAAY,KACZC,KAAK,EACLC,WAAW,EACXC,aAAc,GACdC,UAAW,KACXC,WAAY,YACZC,QAAQ,EACRC,UAAU,EACVC,SAAU,KACVb,UAAU,EACVc,UAAW,KACXC,QAAQ,EACRC,YAAY,EACZC,aAAa,EACbC,UAAW,KACXC,WAAY,KACZC,OAAO,GAIX,IAAIC,EAvBK,CACLlB,QAAS,KACTC,QAAQ,EACRC,WAAY,KACZC,KAAK,EACLC,WAAW,EACXC,aAAc,GACdC,UAAW,KACXC,WAAY,YACZC,QAAQ,EACRC,UAAU,EACVC,SAAU,KACVb,UAAU,EACVc,UAAW,KACXC,QAAQ,EACRC,YAAY,EACZC,aAAa,EACbC,UAAW,KACXC,WAAY,KACZC,OAAO,GAaX,MAAME,EAAa,UACbC,EAAgB,WAChBC,EAAqB,qBACrBC,GAAwB,sBACxBC,GAAqB,CACzB,IAAK,QACL,IAAK,OACL,IAAK,OACL,IAAK,SACL,IAAK,SAEDC,GAAwBC,GAAOF,GAAmBE,GACxD,SAASC,GAAOrJ,EAAMsJ,GACpB,GAAIA,GACF,GAAIR,EAAWS,KAAKvJ,GAClB,OAAOA,EAAKwJ,QAAQT,EAAeI,SAGrC,GAAIH,EAAmBO,KAAKvJ,GAC1B,OAAOA,EAAKwJ,QAAQP,GAAuBE,IAI/C,OAAOnJ,EAGT,MAAMyJ,GAAe,6CAErB,SAASC,GAAS1J,GAEhB,OAAOA,EAAKwJ,QAAQC,IAAc,CAACE,EAAG7J,IAE1B,WADVA,EAAIA,EAAE8J,eACoB,IACN,MAAhB9J,EAAE+J,OAAO,GACY,MAAhB/J,EAAE+J,OAAO,GACZC,OAAOC,aAAaC,SAASlK,EAAEmK,UAAU,GAAI,KAC7CH,OAAOC,cAAcjK,EAAEmK,UAAU,IAEhC,KAIX,MAAMC,GAAQ,eACd,SAASC,GAAKC,EAAOC,GACnBD,EAAQA,EAAME,QAAUF,EACxBC,EAAMA,GAAO,GACb,MAAM7D,EAAM,CACVgD,QAAS,CAACnL,EAAMkM,KAEdA,GADAA,EAAMA,EAAID,QAAUC,GACVf,QAAQU,GAAO,MACzBE,EAAQA,EAAMZ,QAAQnL,EAAMkM,GACrB/D,GAETgE,SAAU,IACD,IAAIC,OAAOL,EAAOC,IAG7B,OAAO7D,EAGT,MAAMkE,GAAsB,UACtBC,GAAuB,gCAC7B,SAASC,GAASpD,EAAUqD,EAAMC,GAChC,GAAItD,EAAU,CACZ,IAAIuD,EACJ,IACEA,EAAOC,mBAAmBtB,GAASoB,IAChCtB,QAAQkB,GAAqB,IAC7Bd,cACH,MAAO/J,GACP,OAAO,KAET,GAAoC,IAAhCkL,EAAK3E,QAAQ,gBAAsD,IAA9B2E,EAAK3E,QAAQ,cAAgD,IAA1B2E,EAAK3E,QAAQ,SACvF,OAAO,KAGPyE,IAASF,GAAqBpB,KAAKuB,KACrCA,EAeJ,SAAoBD,EAAMC,GACnBG,GAAS,IAAMJ,KAIdK,GAAW3B,KAAKsB,GAClBI,GAAS,IAAMJ,GAAQA,EAAO,IAE9BI,GAAS,IAAMJ,GAAQM,GAAMN,EAAM,KAAK,IAI5C,MAAMO,GAAsC,KAD5CP,EAAOI,GAAS,IAAMJ,IACIzE,QAAQ,KAElC,MAA6B,OAAzB0E,EAAKb,UAAU,EAAG,GAChBmB,EACKN,EAEFD,EAAKrB,QAAQ6B,GAAU,MAAQP,EACV,MAAnBA,EAAKjB,OAAO,GACjBuB,EACKN,EAEFD,EAAKrB,QAAQ8B,GAAQ,MAAQR,EAE7BD,EAAOC,EAxCPS,CAAWV,EAAMC,IAE1B,IACEA,EAAOU,UAAUV,GAAMtB,QAAQ,OAAQ,KACvC,MAAO3J,GACP,OAAO,KAET,OAAOiL,EAGT,MAAMG,GAAW,GACXC,GAAa,mBACbG,GAAW,oBACXC,GAAS,4BA+Bf,MAAMG,GAAW,CAAEC,KAAM,cAEzB,SAASC,GAAMnF,GACb,IACE7I,EACAiJ,EAFEvG,EAAI,EAIR,KAAOA,EAAIuL,UAAUlL,OAAQL,IAE3B,IAAKuG,KADLjJ,EAASiO,UAAUvL,GACP1C,EACNX,OAAO6O,UAAUC,eAAelK,KAAKjE,EAAQiJ,KAC/CJ,EAAII,GAAOjJ,EAAOiJ,IAKxB,OAAOJ,EAGT,SAASuF,GAAWC,EAAUC,GAG5B,MAaEC,EAbUF,EAASxC,QAAQ,OAAO,CAAC2C,EAAOC,EAAQC,KAChD,IAAIC,GAAU,EACZC,EAAOH,EACT,OAASG,GAAQ,GAAmB,OAAdF,EAAIE,IAAgBD,GAAWA,EACrD,OAAIA,EAGK,IAGA,QAGCE,MAAM,OACpB,IAAInM,EAAI,EAMR,GAHK6L,EAAM,GAAGO,QAAUP,EAAMQ,QACzBR,EAAMA,EAAMxL,OAAS,GAAG+L,QAAUP,EAAMtJ,MAEzCsJ,EAAMxL,OAASuL,EACjBC,EAAM7F,OAAO4F,QAEb,KAAOC,EAAMxL,OAASuL,GAAOC,EAAM5J,KAAK,IAG1C,KAAOjC,EAAI6L,EAAMxL,OAAQL,IAEvB6L,EAAM7L,GAAK6L,EAAM7L,GAAGoM,OAAOjD,QAAQ,QAAS,KAE9C,OAAO0C,EAMT,SAASf,GAAMkB,EAAKtM,EAAG4M,GACrB,MAAM7G,EAAIuG,EAAI3L,OACd,GAAU,IAANoF,EACF,MAAO,GAIT,IAAI8G,EAAU,EAGd,KAAOA,EAAU9G,GAAG,CAClB,MAAM+G,EAAWR,EAAIxC,OAAO/D,EAAI8G,EAAU,GAC1C,GAAIC,IAAa9M,GAAM4M,EAEhB,CAAA,GAAIE,IAAa9M,IAAK4M,EAG3B,MAFAC,SAFAA,IAQJ,OAAOP,EAAIS,OAAO,EAAGhH,EAAI8G,GAyB3B,SAASG,GAAyB1C,GAC5BA,GAAOA,EAAI7C,WAAa6C,EAAI9B,QAC9ByE,QAAQC,KAAK,2MAKjB,SAASC,GAAaC,EAASlB,GAC7B,GAAIA,EAAQ,EACV,MAAO,GAET,IAAImB,EAAS,GACb,KAAOnB,EAAQ,GACD,EAARA,IACFmB,GAAUD,GAEZlB,IAAU,EACVkB,GAAWA,EAEb,OAAOC,EAASD,EAGlB,SAASE,GAAWC,EAAKC,EAAMC,EAAKC,GAClC,MAAM3C,EAAOyC,EAAKzC,KACZ4C,EAAQH,EAAKG,MAAQrE,GAAOkE,EAAKG,OAAS,KAC1ClP,EAAO8O,EAAI,GAAG9D,QAAQ,cAAe,MAE3C,GAAyB,MAArB8D,EAAI,GAAGzD,OAAO,GAAY,CAC5B4D,EAAME,MAAMC,QAAS,EACrB,MAAMC,EAAQ,CACZ1M,KAAM,OACNqM,IAAAA,EACA1C,KAAAA,EACA4C,MAAAA,EACAlP,KAAAA,EACAsP,OAAQL,EAAMM,aAAavP,EAAM,KAGnC,OADAiP,EAAME,MAAMC,QAAS,EACdC,EAEP,MAAO,CACL1M,KAAM,QACNqM,IAAAA,EACA1C,KAAAA,EACA4C,MAAAA,EACAlP,KAAM6K,GAAO7K,IAoCnB,MAAMwP,GACJrO,YAAYZ,GACVa,KAAKb,QAAUA,GAAW8J,EAG5BlK,MAAMsP,GACJ,MAAMX,EAAM1N,KAAKsO,MAAMzK,MAAM0K,QAAQzC,KAAKuC,GAC1C,GAAIX,EACF,OAAIA,EAAI,GAAG5M,OAAS,EACX,CACLS,KAAM,QACNqM,IAAKF,EAAI,IAGN,CAAEE,IAAK,MAIlBY,KAAKH,GACH,MAAMX,EAAM1N,KAAKsO,MAAMzK,MAAM2K,KAAK1C,KAAKuC,GACvC,GAAIX,EAAK,CACP,MAAM9O,EAAO8O,EAAI,GAAG9D,QAAQ,YAAa,IACzC,MAAO,CACLrI,KAAM,OACNqM,IAAKF,EAAI,GACTe,eAAgB,WAChB7P,KAAOoB,KAAKb,QAAQqJ,SAEhB5J,EADA2M,GAAM3M,EAAM,QAMtB8P,OAAOL,GACL,MAAMX,EAAM1N,KAAKsO,MAAMzK,MAAM6K,OAAO5C,KAAKuC,GACzC,GAAIX,EAAK,CACP,MAAME,EAAMF,EAAI,GACV9O,EApEZ,SAAgCgP,EAAKhP,GACnC,MAAM+P,EAAoBf,EAAIrB,MAAM,iBAEpC,GAA0B,OAAtBoC,EACF,OAAO/P,EAGT,MAAMgQ,EAAeD,EAAkB,GAEvC,OAAO/P,EACJgO,MAAM,MACNpI,KAAIxG,IACH,MAAM6Q,EAAoB7Q,EAAKuO,MAAM,QACrC,GAA0B,OAAtBsC,EACF,OAAO7Q,EAGT,MAAO8Q,GAAgBD,EAEvB,OAAIC,EAAahO,QAAU8N,EAAa9N,OAC/B9C,EAAK+D,MAAM6M,EAAa9N,QAG1B9C,KAER+Q,KAAK,MA2CSC,CAAuBpB,EAAKF,EAAI,IAAM,IAEnD,MAAO,CACLnM,KAAM,OACNqM,IAAAA,EACAqB,KAAMvB,EAAI,GAAKA,EAAI,GAAGb,OAASa,EAAI,GACnC9O,KAAAA,IAKNsQ,QAAQb,GACN,MAAMX,EAAM1N,KAAKsO,MAAMzK,MAAMqL,QAAQpD,KAAKuC,GAC1C,GAAIX,EAAK,CACP,IAAI9O,EAAO8O,EAAI,GAAGb,OAGlB,GAAI,KAAKlD,KAAK/K,GAAO,CACnB,MAAMuQ,EAAU5D,GAAM3M,EAAM,KACxBoB,KAAKb,QAAQqJ,SACf5J,EAAOuQ,EAAQtC,OACLsC,IAAW,KAAKxF,KAAKwF,KAE/BvQ,EAAOuQ,EAAQtC,QAInB,MAAMoB,EAAQ,CACZ1M,KAAM,UACNqM,IAAKF,EAAI,GACT0B,MAAO1B,EAAI,GAAG5M,OACdlC,KAAMA,EACNsP,OAAQ,IAGV,OADAlO,KAAK6N,MAAMwB,OAAOpB,EAAMrP,KAAMqP,EAAMC,QAC7BD,GAIXqB,GAAGjB,GACD,MAAMX,EAAM1N,KAAKsO,MAAMzK,MAAMyL,GAAGxD,KAAKuC,GACrC,GAAIX,EACF,MAAO,CACLnM,KAAM,KACNqM,IAAKF,EAAI,IAKf6B,WAAWlB,GACT,MAAMX,EAAM1N,KAAKsO,MAAMzK,MAAM0L,WAAWzD,KAAKuC,GAC7C,GAAIX,EAAK,CACP,MAAM9O,EAAO8O,EAAI,GAAG9D,QAAQ,WAAY,IAExC,MAAO,CACLrI,KAAM,aACNqM,IAAKF,EAAI,GACTQ,OAAQlO,KAAK6N,MAAM2B,YAAY5Q,EAAM,IACrCA,KAAAA,IAKN6Q,KAAKpB,GACH,IAAIX,EAAM1N,KAAKsO,MAAMzK,MAAM4L,KAAK3D,KAAKuC,GACrC,GAAIX,EAAK,CACP,IAAIE,EAAK8B,EAAQC,EAAWC,EAAQnP,EAAGoP,EAAWC,EAChDC,EAAMC,EAAOC,EAEXC,EAAOxC,EAAI,GAAGb,OAClB,MAAMsD,EAAYD,EAAKpP,OAAS,EAE1B2O,EAAO,CACXlO,KAAM,OACNqM,IAAK,GACLwC,QAASD,EACTE,MAAOF,GAAaD,EAAKnO,MAAM,GAAI,GAAK,GACxCuO,OAAO,EACPC,MAAO,IAGTL,EAAOC,EAAY,aAAaD,EAAKnO,OAAO,KAAO,KAAKmO,IAEpDlQ,KAAKb,QAAQqJ,WACf0H,EAAOC,EAAYD,EAAO,SAI5B,MAAMM,EAAY,IAAI3F,OAAO,WAAWqF,+CAGxC,KAAO7B,IACDrO,KAAKsO,MAAMzK,MAAMyL,GAAG3F,KAAK0E,KAIvBX,EAAM8C,EAAU1E,KAAKuC,KALjB,CASV2B,EAAQtC,EAAI,GAAGd,MAAM,MAEjB5M,KAAKb,QAAQqJ,UACfoH,EAAS,EACTK,EAAeD,EAAM,GAAGS,aAExBb,EAASlC,EAAI,GAAGgD,OAAO,QACvBd,EAASlC,EAAI,GAAG5M,QAAU8O,EAAS,EAAI,EAAIA,GAC3CK,EAAeD,EAAM,GAAGjO,MAAM6N,EAASlC,EAAI,GAAG5M,SAGhD+O,GAAY,EACZjC,EAAMF,EAAI,IAELsC,EAAM,IAAM,OAAOrG,KAAKqG,EAAM,MACjCpC,EAAMF,EAAI,GAAKsC,EAAMjO,MAAM,EAAG,GAAGgN,KAAK,MAAQ,KAC9CU,EAAKa,OAAQ,EACbN,EAAQ,IAGV,MAAMW,EAAkB,IAAI9F,OAAO,QAAQ+F,KAAKC,IAAI,EAAGjB,EAAS,6BAEhE,IAAKnP,EAAI,EAAGA,EAAIuP,EAAMlP,OAAQL,IAAK,CAQjC,GAPAsP,EAAOC,EAAMvP,GAETT,KAAKb,QAAQqJ,WACfuH,EAAOA,EAAKnG,QAAQ,0BAA2B,OAI7C+G,EAAgBhH,KAAKoG,GAAO,CAC9BnC,EAAMF,EAAI,GAAKsC,EAAMjO,MAAM,EAAGtB,GAAGsO,KAAK,MAAQ,KAC9C,MAIF,GAAKc,EAAL,CAeA,KAAIE,EAAKW,OAAO,SAAWd,IAAWG,EAAKlD,OAA3C,CAIEe,EAAMF,EAAI,GAAKsC,EAAMjO,MAAM,EAAGtB,GAAGsO,KAAK,MAAQ,KAC9C,MAJAkB,GAAgB,KAAOF,EAAKhO,MAAM6N,QAf7BG,EAAKlD,SACRgD,GAAY,GAIVE,EAAKW,OAAO,SAAWd,EACzBK,GAAgB,KAAOF,EAAKhO,MAAM6N,GAElCK,GAAgB,KAAOF,EAexBN,EAAKa,QAEJR,EACFL,EAAKa,OAAQ,EACJ,YAAY3G,KAAKiE,KAC1BkC,GAAoB,IAKpB9P,KAAKb,QAAQ+I,MACfwH,EAAS,cAAc5D,KAAKmE,GACxBP,IACFC,EAA0B,SAAdD,EAAO,GACnBO,EAAeA,EAAarG,QAAQ,eAAgB,MAIxD6F,EAAKc,MAAM7N,KAAK,CACdnB,KAAM,YACNqM,IAAKA,EACLkD,OAAQpB,EACRqB,QAASpB,EACTW,OAAO,EACP1R,KAAMqR,IAGRR,EAAK7B,KAAOA,EACZS,EAAMA,EAAItM,MAAM6L,EAAI9M,QAItB2O,EAAKc,MAAMd,EAAKc,MAAMzP,OAAS,GAAG8M,IAAMA,EAAIoD,YAC5CvB,EAAKc,MAAMd,EAAKc,MAAMzP,OAAS,GAAGlC,KAAOqR,EAAae,YACtDvB,EAAK7B,IAAM6B,EAAK7B,IAAIoD,YAEpB,MAAM9K,EAAIuJ,EAAKc,MAAMzP,OAGrB,IAAKL,EAAI,EAAGA,EAAIyF,EAAGzF,IACjBT,KAAK6N,MAAME,MAAMkD,KAAM,EACvBxB,EAAKc,MAAM9P,GAAGyN,OAASlO,KAAK6N,MAAM2B,YAAYC,EAAKc,MAAM9P,GAAG7B,KAAM,IAC9D6Q,EAAKc,MAAM9P,GAAGyN,OAAOgD,MAAK1Q,GAAgB,UAAXA,EAAEe,SACnCkO,EAAKa,OAAQ,EACbb,EAAKc,MAAM9P,GAAG6P,OAAQ,GAI1B,OAAOb,GAIXrP,KAAKiO,GACH,MAAMX,EAAM1N,KAAKsO,MAAMzK,MAAMzD,KAAK0L,KAAKuC,GACvC,GAAIX,EAAK,CACP,MAAMO,EAAQ,CACZ1M,KAAM,OACNqM,IAAKF,EAAI,GACTyD,KAAMnR,KAAKb,QAAQuJ,YACF,QAAXgF,EAAI,IAA2B,WAAXA,EAAI,IAA8B,UAAXA,EAAI,IACrD9O,KAAM8O,EAAI,IAQZ,OANI1N,KAAKb,QAAQyI,WACfqG,EAAM1M,KAAO,YACb0M,EAAMrP,KAAOoB,KAAKb,QAAQuJ,UAAY1I,KAAKb,QAAQuJ,UAAUgF,EAAI,IAAMjE,GAAOiE,EAAI,IAClFO,EAAMC,OAAS,GACflO,KAAK6N,MAAMwB,OAAOpB,EAAMrP,KAAMqP,EAAMC,SAE/BD,GAIXmD,IAAI/C,GACF,MAAMX,EAAM1N,KAAKsO,MAAMzK,MAAMuN,IAAItF,KAAKuC,GACtC,GAAIX,EAAK,CACHA,EAAI,KAAIA,EAAI,GAAKA,EAAI,GAAGrD,UAAU,EAAGqD,EAAI,GAAG5M,OAAS,IAEzD,MAAO,CACLS,KAAM,MACN8P,IAHU3D,EAAI,GAAG1D,cAAcJ,QAAQ,OAAQ,KAI/CgE,IAAKF,EAAI,GACTxC,KAAMwC,EAAI,GACVI,MAAOJ,EAAI,KAKjB4D,MAAMjD,GACJ,MAAMX,EAAM1N,KAAKsO,MAAMzK,MAAMyN,MAAMxF,KAAKuC,GACxC,GAAIX,EAAK,CACP,MAAM6D,EAAO,CACXhQ,KAAM,QACNiQ,OAAQrF,GAAWuB,EAAI,IAAIlJ,KAAIrE,IAAc,CAAEvB,KAAMuB,MACrDsR,MAAO/D,EAAI,GAAG9D,QAAQ,aAAc,IAAIgD,MAAM,UAC9C8E,KAAMhE,EAAI,GAAKA,EAAI,GAAG9D,QAAQ,MAAO,IAAIgD,MAAM,MAAQ,IAGzD,GAAI2E,EAAKC,OAAO1Q,SAAWyQ,EAAKE,MAAM3Q,OAAQ,CAC5CyQ,EAAK3D,IAAMF,EAAI,GAEf,IACIjN,EAAGkR,EAAGC,EAAGC,EADT3L,EAAIqL,EAAKE,MAAM3Q,OAEnB,IAAKL,EAAI,EAAGA,EAAIyF,EAAGzF,IACb,YAAYkJ,KAAK4H,EAAKE,MAAMhR,IAC9B8Q,EAAKE,MAAMhR,GAAK,QACP,aAAakJ,KAAK4H,EAAKE,MAAMhR,IACtC8Q,EAAKE,MAAMhR,GAAK,SACP,YAAYkJ,KAAK4H,EAAKE,MAAMhR,IACrC8Q,EAAKE,MAAMhR,GAAK,OAEhB8Q,EAAKE,MAAMhR,GAAK,KAKpB,IADAyF,EAAIqL,EAAKG,KAAK5Q,OACTL,EAAI,EAAGA,EAAIyF,EAAGzF,IACjB8Q,EAAKG,KAAKjR,GAAK0L,GAAWoF,EAAKG,KAAKjR,GAAI8Q,EAAKC,OAAO1Q,QAAQ0D,KAAIrE,IAAc,CAAEvB,KAAMuB,MAOxF,IADA+F,EAAIqL,EAAKC,OAAO1Q,OACX6Q,EAAI,EAAGA,EAAIzL,EAAGyL,IACjBJ,EAAKC,OAAOG,GAAGzD,OAAS,GACxBlO,KAAK6N,MAAMM,aAAaoD,EAAKC,OAAOG,GAAG/S,KAAM2S,EAAKC,OAAOG,GAAGzD,QAK9D,IADAhI,EAAIqL,EAAKG,KAAK5Q,OACT6Q,EAAI,EAAGA,EAAIzL,EAAGyL,IAEjB,IADAE,EAAMN,EAAKG,KAAKC,GACXC,EAAI,EAAGA,EAAIC,EAAI/Q,OAAQ8Q,IAC1BC,EAAID,GAAG1D,OAAS,GAChBlO,KAAK6N,MAAMM,aAAa0D,EAAID,GAAGhT,KAAMiT,EAAID,GAAG1D,QAIhD,OAAOqD,IAKbO,SAASzD,GACP,MAAMX,EAAM1N,KAAKsO,MAAMzK,MAAMiO,SAAShG,KAAKuC,GAC3C,GAAIX,EAAK,CACP,MAAMO,EAAQ,CACZ1M,KAAM,UACNqM,IAAKF,EAAI,GACT0B,MAA4B,MAArB1B,EAAI,GAAGzD,OAAO,GAAa,EAAI,EACtCrL,KAAM8O,EAAI,GACVQ,OAAQ,IAGV,OADAlO,KAAK6N,MAAMwB,OAAOpB,EAAMrP,KAAMqP,EAAMC,QAC7BD,GAIX8D,UAAU1D,GACR,MAAMX,EAAM1N,KAAKsO,MAAMzK,MAAMkO,UAAUjG,KAAKuC,GAC5C,GAAIX,EAAK,CACP,MAAMO,EAAQ,CACZ1M,KAAM,YACNqM,IAAKF,EAAI,GACT9O,KAA2C,OAArC8O,EAAI,GAAGzD,OAAOyD,EAAI,GAAG5M,OAAS,GAChC4M,EAAI,GAAG3L,MAAM,GAAI,GACjB2L,EAAI,GACRQ,OAAQ,IAGV,OADAlO,KAAK6N,MAAMwB,OAAOpB,EAAMrP,KAAMqP,EAAMC,QAC7BD,GAIXrP,KAAKyP,GACH,MAAMX,EAAM1N,KAAKsO,MAAMzK,MAAMjF,KAAKkN,KAAKuC,GACvC,GAAIX,EAAK,CACP,MAAMO,EAAQ,CACZ1M,KAAM,OACNqM,IAAKF,EAAI,GACT9O,KAAM8O,EAAI,GACVQ,OAAQ,IAGV,OADAlO,KAAK6N,MAAMwB,OAAOpB,EAAMrP,KAAMqP,EAAMC,QAC7BD,GAIXxE,OAAO4E,GACL,MAAMX,EAAM1N,KAAKsO,MAAMe,OAAO5F,OAAOqC,KAAKuC,GAC1C,GAAIX,EACF,MAAO,CACLnM,KAAM,SACNqM,IAAKF,EAAI,GACT9O,KAAM6K,GAAOiE,EAAI,KAKvB2D,IAAIhD,GACF,MAAMX,EAAM1N,KAAKsO,MAAMe,OAAOgC,IAAIvF,KAAKuC,GACvC,GAAIX,EAYF,OAXK1N,KAAK6N,MAAME,MAAMC,QAAU,QAAQrE,KAAK+D,EAAI,IAC/C1N,KAAK6N,MAAME,MAAMC,QAAS,EACjBhO,KAAK6N,MAAME,MAAMC,QAAU,UAAUrE,KAAK+D,EAAI,MACvD1N,KAAK6N,MAAME,MAAMC,QAAS,IAEvBhO,KAAK6N,MAAME,MAAMiE,YAAc,iCAAiCrI,KAAK+D,EAAI,IAC5E1N,KAAK6N,MAAME,MAAMiE,YAAa,EACrBhS,KAAK6N,MAAME,MAAMiE,YAAc,mCAAmCrI,KAAK+D,EAAI,MACpF1N,KAAK6N,MAAME,MAAMiE,YAAa,GAGzB,CACLzQ,KAAMvB,KAAKb,QAAQyI,SACf,OACA,OACJgG,IAAKF,EAAI,GACTM,OAAQhO,KAAK6N,MAAME,MAAMC,OACzBgE,WAAYhS,KAAK6N,MAAME,MAAMiE,WAC7BpT,KAAMoB,KAAKb,QAAQyI,SACd5H,KAAKb,QAAQuJ,UACZ1I,KAAKb,QAAQuJ,UAAUgF,EAAI,IAC3BjE,GAAOiE,EAAI,IACbA,EAAI,IAKdC,KAAKU,GACH,MAAMX,EAAM1N,KAAKsO,MAAMe,OAAO1B,KAAK7B,KAAKuC,GACxC,GAAIX,EAAK,CACP,MAAMuE,EAAavE,EAAI,GAAGb,OAC1B,IAAK7M,KAAKb,QAAQqJ,UAAY,KAAKmB,KAAKsI,GAAa,CAEnD,IAAM,KAAKtI,KAAKsI,GACd,OAIF,MAAMC,EAAa3G,GAAM0G,EAAWlQ,MAAM,GAAI,GAAI,MAClD,IAAKkQ,EAAWnR,OAASoR,EAAWpR,QAAU,GAAM,EAClD,WAEG,CAEL,MAAMqR,EAliBd,SAA4B1F,EAAK5O,GAC/B,IAA2B,IAAvB4O,EAAIjG,QAAQ3I,EAAE,IAChB,OAAQ,EAEV,MAAMqI,EAAIuG,EAAI3L,OACd,IAAIsR,EAAQ,EACV3R,EAAI,EACN,KAAOA,EAAIyF,EAAGzF,IACZ,GAAe,OAAXgM,EAAIhM,GACNA,SACK,GAAIgM,EAAIhM,KAAO5C,EAAE,GACtBuU,SACK,GAAI3F,EAAIhM,KAAO5C,EAAE,KACtBuU,IACIA,EAAQ,GACV,OAAO3R,EAIb,OAAQ,EA+gBqB4R,CAAmB3E,EAAI,GAAI,MAClD,GAAIyE,GAAkB,EAAG,CACvB,MACMG,GADgC,IAAxB5E,EAAI,GAAGlH,QAAQ,KAAa,EAAI,GACtBkH,EAAI,GAAG5M,OAASqR,EACxCzE,EAAI,GAAKA,EAAI,GAAGrD,UAAU,EAAG8H,GAC7BzE,EAAI,GAAKA,EAAI,GAAGrD,UAAU,EAAGiI,GAASzF,OACtCa,EAAI,GAAK,IAGb,IAAIxC,EAAOwC,EAAI,GACXI,EAAQ,GACZ,GAAI9N,KAAKb,QAAQqJ,SAAU,CAEzB,MAAMmF,EAAO,gCAAgC7B,KAAKZ,GAE9CyC,IACFzC,EAAOyC,EAAK,GACZG,EAAQH,EAAK,SAGfG,EAAQJ,EAAI,GAAKA,EAAI,GAAG3L,MAAM,GAAI,GAAK,GAYzC,OATAmJ,EAAOA,EAAK2B,OACR,KAAKlD,KAAKuB,KAGVA,EAFElL,KAAKb,QAAQqJ,WAAc,KAAKmB,KAAKsI,GAEhC/G,EAAKnJ,MAAM,GAEXmJ,EAAKnJ,MAAM,GAAI,IAGnB0L,GAAWC,EAAK,CACrBxC,KAAMA,EAAOA,EAAKtB,QAAQ5J,KAAKsO,MAAMe,OAAOkD,SAAU,MAAQrH,EAC9D4C,MAAOA,EAAQA,EAAMlE,QAAQ5J,KAAKsO,MAAMe,OAAOkD,SAAU,MAAQzE,GAChEJ,EAAI,GAAI1N,KAAK6N,QAIpB2E,QAAQnE,EAAKoE,GACX,IAAI/E,EACJ,IAAKA,EAAM1N,KAAKsO,MAAMe,OAAOmD,QAAQ1G,KAAKuC,MAClCX,EAAM1N,KAAKsO,MAAMe,OAAOqD,OAAO5G,KAAKuC,IAAO,CACjD,IAAIV,GAAQD,EAAI,IAAMA,EAAI,IAAI9D,QAAQ,OAAQ,KAE9C,GADA+D,EAAO8E,EAAM9E,EAAK3D,gBACb2D,IAASA,EAAKzC,KAAM,CACvB,MAAMtM,EAAO8O,EAAI,GAAGzD,OAAO,GAC3B,MAAO,CACL1I,KAAM,OACNqM,IAAKhP,EACLA,KAAAA,GAGJ,OAAO6O,GAAWC,EAAKC,EAAMD,EAAI,GAAI1N,KAAK6N,QAI9C8E,SAAStE,EAAKuE,EAAWC,EAAW,IAClC,IAAItG,EAAQvM,KAAKsO,MAAMe,OAAOsD,SAASG,OAAOhH,KAAKuC,GACnD,IAAK9B,EAAO,OAGZ,GAAIA,EAAM,IAAMsG,EAAStG,MAAM,iBAAkB,OAEjD,MAAMwG,EAAWxG,EAAM,IAAMA,EAAM,IAAM,GAEzC,IAAKwG,GAAaA,IAA0B,KAAbF,GAAmB7S,KAAKsO,MAAMe,OAAO2D,YAAYlH,KAAK+G,IAAa,CAChG,MAAMI,EAAU1G,EAAM,GAAGzL,OAAS,EAClC,IAAIoS,EAAQC,EAASC,EAAaH,EAASI,EAAgB,EAE3D,MAAMC,EAAyB,MAAhB/G,EAAM,GAAG,GAAavM,KAAKsO,MAAMe,OAAOsD,SAASY,UAAYvT,KAAKsO,MAAMe,OAAOsD,SAASa,UAMvG,IALAF,EAAOG,UAAY,EAGnBb,EAAYA,EAAU7Q,OAAO,EAAIsM,EAAIvN,OAASmS,GAEH,OAAnC1G,EAAQ+G,EAAOxH,KAAK8G,KAAqB,CAG/C,GAFAM,EAAS3G,EAAM,IAAMA,EAAM,IAAMA,EAAM,IAAMA,EAAM,IAAMA,EAAM,IAAMA,EAAM,IAEtE2G,EAAQ,SAIb,GAFAC,EAAUD,EAAOpS,OAEbyL,EAAM,IAAMA,EAAM,GAAI,CACxB6G,GAAcD,EACd,SACK,IAAI5G,EAAM,IAAMA,EAAM,KACvB0G,EAAU,MAAQA,EAAUE,GAAW,GAAI,CAC7CE,GAAiBF,EACjB,SAMJ,GAFAC,GAAcD,EAEVC,EAAa,EAAG,SAMpB,GAHAD,EAAUvC,KAAKC,IAAIsC,EAASA,EAAUC,EAAaC,GAG/CzC,KAAKC,IAAIoC,EAASE,GAAW,EAAG,CAClC,MAAMvU,EAAOyP,EAAItM,MAAM,EAAGkR,EAAU1G,EAAMhG,MAAQ4M,GAClD,MAAO,CACL5R,KAAM,KACNqM,IAAKS,EAAItM,MAAM,EAAGkR,EAAU1G,EAAMhG,MAAQ4M,EAAU,GACpDvU,KAAAA,EACAsP,OAAQlO,KAAK6N,MAAMM,aAAavP,EAAM,KAK1C,MAAMA,EAAOyP,EAAItM,MAAM,EAAGkR,EAAU1G,EAAMhG,MAAQ4M,EAAU,GAC5D,MAAO,CACL5R,KAAM,SACNqM,IAAKS,EAAItM,MAAM,EAAGkR,EAAU1G,EAAMhG,MAAQ4M,EAAU,GACpDvU,KAAAA,EACAsP,OAAQlO,KAAK6N,MAAMM,aAAavP,EAAM,OAM9C8U,SAASrF,GACP,MAAMX,EAAM1N,KAAKsO,MAAMe,OAAOb,KAAK1C,KAAKuC,GACxC,GAAIX,EAAK,CACP,IAAI9O,EAAO8O,EAAI,GAAG9D,QAAQ,MAAO,KACjC,MAAM+J,EAAmB,OAAOhK,KAAK/K,GAC/BgV,EAA0B,KAAKjK,KAAK/K,IAAS,KAAK+K,KAAK/K,GAK7D,OAJI+U,GAAoBC,IACtBhV,EAAOA,EAAKyL,UAAU,EAAGzL,EAAKkC,OAAS,IAEzClC,EAAO6K,GAAO7K,GAAM,GACb,CACL2C,KAAM,WACNqM,IAAKF,EAAI,GACT9O,KAAAA,IAKNiV,GAAGxF,GACD,MAAMX,EAAM1N,KAAKsO,MAAMe,OAAOwE,GAAG/H,KAAKuC,GACtC,GAAIX,EACF,MAAO,CACLnM,KAAM,KACNqM,IAAKF,EAAI,IAKfoG,IAAIzF,GACF,MAAMX,EAAM1N,KAAKsO,MAAMe,OAAOyE,IAAIhI,KAAKuC,GACvC,GAAIX,EACF,MAAO,CACLnM,KAAM,MACNqM,IAAKF,EAAI,GACT9O,KAAM8O,EAAI,GACVQ,OAAQlO,KAAK6N,MAAMM,aAAaT,EAAI,GAAI,KAK9CqG,SAAS1F,EAAK9F,GACZ,MAAMmF,EAAM1N,KAAKsO,MAAMe,OAAO0E,SAASjI,KAAKuC,GAC5C,GAAIX,EAAK,CACP,IAAI9O,EAAMsM,EASV,MARe,MAAXwC,EAAI,IACN9O,EAAO6K,GAAOzJ,KAAKb,QAAQoJ,OAASA,EAAOmF,EAAI,IAAMA,EAAI,IACzDxC,EAAO,UAAYtM,IAEnBA,EAAO6K,GAAOiE,EAAI,IAClBxC,EAAOtM,GAGF,CACL2C,KAAM,OACNqM,IAAKF,EAAI,GACT9O,KAAAA,EACAsM,KAAAA,EACAgD,OAAQ,CACN,CACE3M,KAAM,OACNqM,IAAKhP,EACLA,KAAAA,MAOVoV,IAAI3F,EAAK9F,GACP,IAAImF,EACJ,GAAIA,EAAM1N,KAAKsO,MAAMe,OAAO2E,IAAIlI,KAAKuC,GAAM,CACzC,IAAIzP,EAAMsM,EACV,GAAe,MAAXwC,EAAI,GACN9O,EAAO6K,GAAOzJ,KAAKb,QAAQoJ,OAASA,EAAOmF,EAAI,IAAMA,EAAI,IACzDxC,EAAO,UAAYtM,MACd,CAEL,IAAIqV,EACJ,GACEA,EAAcvG,EAAI,GAClBA,EAAI,GAAK1N,KAAKsO,MAAMe,OAAO6E,WAAWpI,KAAK4B,EAAI,IAAI,SAC5CuG,IAAgBvG,EAAI,IAC7B9O,EAAO6K,GAAOiE,EAAI,IAEhBxC,EADa,SAAXwC,EAAI,GACC,UAAY9O,EAEZA,EAGX,MAAO,CACL2C,KAAM,OACNqM,IAAKF,EAAI,GACT9O,KAAAA,EACAsM,KAAAA,EACAgD,OAAQ,CACN,CACE3M,KAAM,OACNqM,IAAKhP,EACLA,KAAAA,MAOVuV,WAAW9F,EAAKxF,GACd,MAAM6E,EAAM1N,KAAKsO,MAAMe,OAAOzQ,KAAKkN,KAAKuC,GACxC,GAAIX,EAAK,CACP,IAAI9O,EAMJ,OAJEA,EADEoB,KAAK6N,MAAME,MAAMiE,WACZhS,KAAKb,QAAQyI,SAAY5H,KAAKb,QAAQuJ,UAAY1I,KAAKb,QAAQuJ,UAAUgF,EAAI,IAAMjE,GAAOiE,EAAI,IAAOA,EAAI,GAEzGjE,GAAOzJ,KAAKb,QAAQ0J,YAAcA,EAAY6E,EAAI,IAAMA,EAAI,IAE9D,CACLnM,KAAM,OACNqM,IAAKF,EAAI,GACT9O,KAAAA,KASR,MAAMiF,GAAQ,CACZ0K,QAAS,mBACTC,KAAM,uCACNE,OAAQ,4FACRY,GAAI,yDACJJ,QAAS,uCACTK,WAAY,0CACZE,KAAM,mCACNrP,KAAM,mdAUNgR,IAAK,mFACLE,MAAOzF,GACPiG,SAAU,sCAGVsC,WAAY,iFACZxV,KAAM,UAGRiF,OAAe,iCACfA,OAAe,gEACfA,GAAMuN,IAAM7G,GAAK1G,GAAMuN,KACpBxH,QAAQ,QAAS/F,GAAMwQ,QACvBzK,QAAQ,QAAS/F,GAAMyQ,QACvB1J,WAEH/G,GAAM0Q,OAAS,wBACf1Q,GAAM2Q,cAAgBjK,GAAK,iBACxBX,QAAQ,OAAQ/F,GAAM0Q,QACtB3J,WAEH/G,GAAM4L,KAAOlF,GAAK1G,GAAM4L,MACrB7F,QAAQ,QAAS/F,GAAM0Q,QACvB3K,QAAQ,KAAM,mEACdA,QAAQ,MAAO,UAAY/F,GAAMuN,IAAI1G,OAAS,KAC9CE,WAEH/G,GAAM4Q,KAAO,gWAMb5Q,GAAM6Q,SAAW,+BACjB7Q,GAAMzD,KAAOmK,GAAK1G,GAAMzD,KAAM,KAC3BwJ,QAAQ,UAAW/F,GAAM6Q,UACzB9K,QAAQ,MAAO/F,GAAM4Q,MACrB7K,QAAQ,YAAa,4EACrBgB,WAEH/G,GAAMkO,UAAYxH,GAAK1G,GAAMuQ,YAC1BxK,QAAQ,KAAM/F,GAAMyL,IACpB1F,QAAQ,UAAW,iBACnBA,QAAQ,YAAa,IACrBA,QAAQ,aAAc,WACtBA,QAAQ,SAAU,kDAClBA,QAAQ,OAAQ,0BAChBA,QAAQ,OAAQ,+DAChBA,QAAQ,MAAO/F,GAAM4Q,MACrB7J,WAEH/G,GAAM0L,WAAahF,GAAK1G,GAAM0L,YAC3B3F,QAAQ,YAAa/F,GAAMkO,WAC3BnH,WAMH/G,GAAM8Q,OAAS5I,GAAM,GAAIlI,IAMzBA,GAAMqE,IAAM6D,GAAM,GAAIlI,GAAM8Q,OAAQ,CAClCrD,MAAO,qKAKTzN,GAAMqE,IAAIoJ,MAAQ/G,GAAK1G,GAAMqE,IAAIoJ,OAC9B1H,QAAQ,KAAM/F,GAAMyL,IACpB1F,QAAQ,UAAW,iBACnBA,QAAQ,aAAc,WACtBA,QAAQ,OAAQ,cAChBA,QAAQ,SAAU,kDAClBA,QAAQ,OAAQ,0BAChBA,QAAQ,OAAQ,+DAChBA,QAAQ,MAAO/F,GAAM4Q,MACrB7J,WAMH/G,GAAM2E,SAAWuD,GAAM,GAAIlI,GAAM8Q,OAAQ,CACvCvU,KAAMmK,GACJ,8IAGCX,QAAQ,UAAW/F,GAAM6Q,UACzB9K,QAAQ,OAAQ,qKAIhBgB,WACHwG,IAAK,oEACLlC,QAAS,yBACTR,OAAQ7C,GACRkG,UAAWxH,GAAK1G,GAAM8Q,OAAOP,YAC1BxK,QAAQ,KAAM/F,GAAMyL,IACpB1F,QAAQ,UAAW,mBACnBA,QAAQ,WAAY/F,GAAMiO,UAC1BlI,QAAQ,aAAc,WACtBA,QAAQ,UAAW,IACnBA,QAAQ,QAAS,IACjBA,QAAQ,QAAS,IACjBgB,aAML,MAAMyE,GAAS,CACb5F,OAAQ,8CACRsK,SAAU,sCACVC,IAAKnI,GACLwF,IAAK,2JAML1D,KAAM,gDACN6E,QAAS,wDACTE,OAAQ,gEACRkC,cAAe,wBACfjC,SAAU,CACRG,OAAQ,2DAGRS,UAAW,mNACXC,UAAW,kLAEbhF,KAAM,sCACNqF,GAAI,wBACJC,IAAKjI,GACLjN,KAAM,8EACNoU,YAAa,sBA2Hf,SAASnK,GAAYjK,GACnB,OAAOA,EAEJgL,QAAQ,OAAQ,KAEhBA,QAAQ,MAAO,KAEfA,QAAQ,0BAA2B,OAEnCA,QAAQ,KAAM,KAEdA,QAAQ,+BAAgC,OAExCA,QAAQ,KAAM,KAEdA,QAAQ,SAAU,KAMvB,SAASrB,GAAO3J,GACd,IACE6B,EACA+I,EAFEqL,EAAM,GAIV,MAAM3O,EAAItH,EAAKkC,OACf,IAAKL,EAAI,EAAGA,EAAIyF,EAAGzF,IACjB+I,EAAK5K,EAAKkW,WAAWrU,GACjBmQ,KAAKmE,SAAW,KAClBvL,EAAK,IAAMA,EAAGwL,SAAS,KAEzBH,GAAO,KAAOrL,EAAK,IAGrB,OAAOqL,EAzJTxF,GAAO4F,aAAe,uCACtB5F,GAAO2D,YAAczI,GAAK8E,GAAO2D,aAAapJ,QAAQ,eAAgByF,GAAO4F,cAAcrK,WAG3FyE,GAAO6F,UAAY,4CACnB7F,GAAO8F,YAAc,YAErB9F,GAAOqF,SAAWnK,GAAK1G,GAAM6Q,UAAU9K,QAAQ,eAAa,UAAOgB,WAEnEyE,GAAOsD,SAASG,OAASvI,GAAK8E,GAAOsD,SAASG,QAC3ClJ,QAAQ,SAAUyF,GAAO4F,cACzBrK,WAEHyE,GAAOsD,SAASY,UAAYhJ,GAAK8E,GAAOsD,SAASY,UAAW,KACzD3J,QAAQ,SAAUyF,GAAO4F,cACzBrK,WAEHyE,GAAOsD,SAASa,UAAYjJ,GAAK8E,GAAOsD,SAASa,UAAW,KACzD5J,QAAQ,SAAUyF,GAAO4F,cACzBrK,WAEHyE,GAAOkD,SAAW,8CAElBlD,GAAO+F,QAAU,+BACjB/F,GAAOgG,OAAS,+IAChBhG,GAAO0E,SAAWxJ,GAAK8E,GAAO0E,UAC3BnK,QAAQ,SAAUyF,GAAO+F,SACzBxL,QAAQ,QAASyF,GAAOgG,QACxBzK,WAEHyE,GAAOiG,WAAa,8EAEpBjG,GAAOgC,IAAM9G,GAAK8E,GAAOgC,KACtBzH,QAAQ,UAAWyF,GAAOqF,UAC1B9K,QAAQ,YAAayF,GAAOiG,YAC5B1K,WAEHyE,GAAOgF,OAAS,sDAChBhF,GAAOkG,MAAQ,uCACflG,GAAOiF,OAAS,8DAEhBjF,GAAO1B,KAAOpD,GAAK8E,GAAO1B,MACvB/D,QAAQ,QAASyF,GAAOgF,QACxBzK,QAAQ,OAAQyF,GAAOkG,OACvB3L,QAAQ,QAASyF,GAAOiF,QACxB1J,WAEHyE,GAAOmD,QAAUjI,GAAK8E,GAAOmD,SAC1B5I,QAAQ,QAASyF,GAAOgF,QACxBzJ,WAEHyE,GAAOuF,cAAgBrK,GAAK8E,GAAOuF,cAAe,KAC/ChL,QAAQ,UAAWyF,GAAOmD,SAC1B5I,QAAQ,SAAUyF,GAAOqD,QACzB9H,WAMHyE,GAAOsF,OAAS5I,GAAM,GAAIsD,IAM1BA,GAAO7G,SAAWuD,GAAM,GAAIsD,GAAOsF,OAAQ,CACzCa,OAAQ,CACNnF,MAAO,WACPoF,OAAQ,iEACRC,OAAQ,cACRC,OAAQ,YAEVC,GAAI,CACFvF,MAAO,QACPoF,OAAQ,6DACRC,OAAQ,YACRC,OAAQ,WAEVhI,KAAMpD,GAAK,2BACRX,QAAQ,QAASyF,GAAOgF,QACxBzJ,WACH4H,QAASjI,GAAK,iCACXX,QAAQ,QAASyF,GAAOgF,QACxBzJ,aAOLyE,GAAOnH,IAAM6D,GAAM,GAAIsD,GAAOsF,OAAQ,CACpClL,OAAQc,GAAK8E,GAAO5F,QAAQG,QAAQ,KAAM,QAAQgB,WAClDiL,gBAAiB,4EACjB7B,IAAK,mEACLE,WAAY,yEACZJ,IAAK,+CACLlV,KAAM,+NAGRyQ,GAAOnH,IAAI8L,IAAMzJ,GAAK8E,GAAOnH,IAAI8L,IAAK,KACnCpK,QAAQ,QAASyF,GAAOnH,IAAI2N,iBAC5BjL,WAKHyE,GAAOrH,OAAS+D,GAAM,GAAIsD,GAAOnH,IAAK,CACpC2L,GAAItJ,GAAK8E,GAAOwE,IAAIjK,QAAQ,OAAQ,KAAKgB,WACzChM,KAAM2L,GAAK8E,GAAOnH,IAAItJ,MACnBgL,QAAQ,OAAQ,iBAChBA,QAAQ,UAAW,KACnBgB,aA+CL,MAAMkL,GACJ/V,YAAYZ,GACVa,KAAKkO,OAAS,GACdlO,KAAKkO,OAAOuE,MAAQrV,OAAOC,OAAO,MAClC2C,KAAKb,QAAUA,GAAW8J,EAC1BjJ,KAAKb,QAAQ2J,UAAY9I,KAAKb,QAAQ2J,WAAa,IAAIsF,GACvDpO,KAAK8I,UAAY9I,KAAKb,QAAQ2J,UAC9B9I,KAAK8I,UAAU3J,QAAUa,KAAKb,QAC9Ba,KAAK8I,UAAU+E,MAAQ7N,KACvBA,KAAK+V,YAAc,GACnB/V,KAAK+N,MAAQ,CACXC,QAAQ,EACRgE,YAAY,EACZf,KAAK,GAGP,MAAM3C,EAAQ,CACZzK,MAAOA,GAAM8Q,OACbtF,OAAQA,GAAOsF,QAGb3U,KAAKb,QAAQqJ,UACf8F,EAAMzK,MAAQA,GAAM2E,SACpB8F,EAAMe,OAASA,GAAO7G,UACbxI,KAAKb,QAAQ+I,MACtBoG,EAAMzK,MAAQA,GAAMqE,IAChBlI,KAAKb,QAAQ6I,OACfsG,EAAMe,OAASA,GAAOrH,OAEtBsG,EAAMe,OAASA,GAAOnH,KAG1BlI,KAAK8I,UAAUwF,MAAQA,EAMdA,mBACT,MAAO,CACLzK,MAAAA,GACAwL,OAAAA,IAOJ2G,WAAW3H,EAAKlP,GAEd,OADc,IAAI2W,GAAM3W,GACX8W,IAAI5H,GAMnB2H,iBAAiB3H,EAAKlP,GAEpB,OADc,IAAI2W,GAAM3W,GACXgP,aAAaE,GAM5B4H,IAAI5H,GAOF,IAAI6H,EACJ,IAPA7H,EAAMA,EACHzE,QAAQ,WAAY,MACpBA,QAAQ,MAAO,QAElB5J,KAAKwP,YAAYnB,EAAKrO,KAAKkO,QAGpBgI,EAAOlW,KAAK+V,YAAYjJ,SAC7B9M,KAAKmO,aAAa+H,EAAK7H,IAAK6H,EAAKhI,QAGnC,OAAOlO,KAAKkO,OAMdsB,YAAYnB,EAAKH,EAAS,IAIxB,IAAID,EAAOkI,EAAWC,EAAQC,EAE9B,IALIrW,KAAKb,QAAQqJ,WACf6F,EAAMA,EAAIzE,QAAQ,SAAU,KAIvByE,GACL,KAAIrO,KAAKb,QAAQ8I,YACZjI,KAAKb,QAAQ8I,WAAWpE,OACxB7D,KAAKb,QAAQ8I,WAAWpE,MAAMqN,MAAMoF,MACjCrI,EAAQqI,EAAatU,KAAK,CAAE6L,MAAO7N,MAAQqO,EAAKH,MAClDG,EAAMA,EAAIhE,UAAU4D,EAAML,IAAI9M,QAC9BoN,EAAOxL,KAAKuL,IACL,MAQb,GAAIA,EAAQjO,KAAK8I,UAAU/J,MAAMsP,GAC/BA,EAAMA,EAAIhE,UAAU4D,EAAML,IAAI9M,QAC1BmN,EAAM1M,MACR2M,EAAOxL,KAAKuL,QAMhB,GAAIA,EAAQjO,KAAK8I,UAAU0F,KAAKH,GAC9BA,EAAMA,EAAIhE,UAAU4D,EAAML,IAAI9M,QAC9BqV,EAAYjI,EAAOA,EAAOpN,OAAS,IAE/BqV,GAAiC,cAAnBA,EAAU5U,MAA2C,SAAnB4U,EAAU5U,KAK5D2M,EAAOxL,KAAKuL,IAJZkI,EAAUvI,KAAO,KAAOK,EAAML,IAC9BuI,EAAUvX,MAAQ,KAAOqP,EAAMrP,KAC/BoB,KAAK+V,YAAY/V,KAAK+V,YAAYjV,OAAS,GAAGuN,IAAM8H,EAAUvX,WAQlE,GAAIqP,EAAQjO,KAAK8I,UAAU4F,OAAOL,GAChCA,EAAMA,EAAIhE,UAAU4D,EAAML,IAAI9M,QAC9BoN,EAAOxL,KAAKuL,QAKd,GAAIA,EAAQjO,KAAK8I,UAAUoG,QAAQb,GACjCA,EAAMA,EAAIhE,UAAU4D,EAAML,IAAI9M,QAC9BoN,EAAOxL,KAAKuL,QAKd,GAAIA,EAAQjO,KAAK8I,UAAUwG,GAAGjB,GAC5BA,EAAMA,EAAIhE,UAAU4D,EAAML,IAAI9M,QAC9BoN,EAAOxL,KAAKuL,QAKd,GAAIA,EAAQjO,KAAK8I,UAAUyG,WAAWlB,GACpCA,EAAMA,EAAIhE,UAAU4D,EAAML,IAAI9M,QAC9BoN,EAAOxL,KAAKuL,QAKd,GAAIA,EAAQjO,KAAK8I,UAAU2G,KAAKpB,GAC9BA,EAAMA,EAAIhE,UAAU4D,EAAML,IAAI9M,QAC9BoN,EAAOxL,KAAKuL,QAKd,GAAIA,EAAQjO,KAAK8I,UAAU1I,KAAKiO,GAC9BA,EAAMA,EAAIhE,UAAU4D,EAAML,IAAI9M,QAC9BoN,EAAOxL,KAAKuL,QAKd,GAAIA,EAAQjO,KAAK8I,UAAUsI,IAAI/C,GAC7BA,EAAMA,EAAIhE,UAAU4D,EAAML,IAAI9M,QAC9BqV,EAAYjI,EAAOA,EAAOpN,OAAS,IAC/BqV,GAAiC,cAAnBA,EAAU5U,MAA2C,SAAnB4U,EAAU5U,KAIlDvB,KAAKkO,OAAOuE,MAAMxE,EAAMoD,OAClCrR,KAAKkO,OAAOuE,MAAMxE,EAAMoD,KAAO,CAC7BnG,KAAM+C,EAAM/C,KACZ4C,MAAOG,EAAMH,SANfqI,EAAUvI,KAAO,KAAOK,EAAML,IAC9BuI,EAAUvX,MAAQ,KAAOqP,EAAML,IAC/B5N,KAAK+V,YAAY/V,KAAK+V,YAAYjV,OAAS,GAAGuN,IAAM8H,EAAUvX,WAWlE,GAAIqP,EAAQjO,KAAK8I,UAAUwI,MAAMjD,GAC/BA,EAAMA,EAAIhE,UAAU4D,EAAML,IAAI9M,QAC9BoN,EAAOxL,KAAKuL,QAKd,GAAIA,EAAQjO,KAAK8I,UAAUgJ,SAASzD,GAClCA,EAAMA,EAAIhE,UAAU4D,EAAML,IAAI9M,QAC9BoN,EAAOxL,KAAKuL,OAFd,CASA,GADAmI,EAAS/H,EACLrO,KAAKb,QAAQ8I,YAAcjI,KAAKb,QAAQ8I,WAAWsO,WAAY,CACjE,IAAIC,EAAaC,EAAAA,EACjB,MAAMC,EAAUrI,EAAItM,MAAM,GAC1B,IAAI4U,EACJ3W,KAAKb,QAAQ8I,WAAWsO,WAAW/Y,SAAQ,SAASoZ,GAClDD,EAAYC,EAAc5U,KAAK,CAAE6L,MAAO7N,MAAQ0W,GACvB,iBAAdC,GAA0BA,GAAa,IAAKH,EAAa5F,KAAKC,IAAI2F,EAAYG,OAEvFH,EAAaC,EAAAA,GAAYD,GAAc,IACzCJ,EAAS/H,EAAIhE,UAAU,EAAGmM,EAAa,IAG3C,GAAIxW,KAAK+N,MAAMkD,MAAQhD,EAAQjO,KAAK8I,UAAUiJ,UAAUqE,IACtDD,EAAYjI,EAAOA,EAAOpN,OAAS,GAC/BuV,GAA2C,cAAnBF,EAAU5U,MACpC4U,EAAUvI,KAAO,KAAOK,EAAML,IAC9BuI,EAAUvX,MAAQ,KAAOqP,EAAMrP,KAC/BoB,KAAK+V,YAAY/S,MACjBhD,KAAK+V,YAAY/V,KAAK+V,YAAYjV,OAAS,GAAGuN,IAAM8H,EAAUvX,MAE9DsP,EAAOxL,KAAKuL,GAEdoI,EAAwBD,EAAOtV,SAAWuN,EAAIvN,OAC9CuN,EAAMA,EAAIhE,UAAU4D,EAAML,IAAI9M,aAKhC,GAAImN,EAAQjO,KAAK8I,UAAUlK,KAAKyP,GAC9BA,EAAMA,EAAIhE,UAAU4D,EAAML,IAAI9M,QAC9BqV,EAAYjI,EAAOA,EAAOpN,OAAS,GAC/BqV,GAAgC,SAAnBA,EAAU5U,MACzB4U,EAAUvI,KAAO,KAAOK,EAAML,IAC9BuI,EAAUvX,MAAQ,KAAOqP,EAAMrP,KAC/BoB,KAAK+V,YAAY/S,MACjBhD,KAAK+V,YAAY/V,KAAK+V,YAAYjV,OAAS,GAAGuN,IAAM8H,EAAUvX,MAE9DsP,EAAOxL,KAAKuL,QAKhB,GAAII,EAAK,CACP,MAAMwI,EAAS,0BAA4BxI,EAAIyG,WAAW,GAC1D,GAAI9U,KAAKb,QAAQwJ,OAAQ,CACvByE,QAAQ0J,MAAMD,GACd,MAEA,MAAM,IAAIxV,MAAMwV,IAMtB,OADA7W,KAAK+N,MAAMkD,KAAM,EACV/C,EAGTmB,OAAOhB,EAAKH,GACVlO,KAAK+V,YAAYrT,KAAK,CAAE2L,IAAAA,EAAKH,OAAAA,IAM/BC,aAAaE,EAAKH,EAAS,IACzB,IAAID,EAAOkI,EAAWC,EAIlB7J,EACAwK,EAAclE,EAFdD,EAAYvE,EAKhB,GAAIrO,KAAKkO,OAAOuE,MAAO,CACrB,MAAMA,EAAQrV,OAAO0J,KAAK9G,KAAKkO,OAAOuE,OACtC,GAAIA,EAAM3R,OAAS,EACjB,KAA8E,OAAtEyL,EAAQvM,KAAK8I,UAAUwF,MAAMe,OAAOuF,cAAc9I,KAAK8G,KACzDH,EAAMuE,SAASzK,EAAM,GAAGxK,MAAMwK,EAAM,GAAG0K,YAAY,KAAO,GAAI,MAChErE,EAAYA,EAAU7Q,MAAM,EAAGwK,EAAMhG,OAAS,IAAM+G,GAAa,IAAKf,EAAM,GAAGzL,OAAS,GAAK,IAAM8R,EAAU7Q,MAAM/B,KAAK8I,UAAUwF,MAAMe,OAAOuF,cAAcnB,YAMrK,KAA0E,OAAlElH,EAAQvM,KAAK8I,UAAUwF,MAAMe,OAAO6F,UAAUpJ,KAAK8G,KACzDA,EAAYA,EAAU7Q,MAAM,EAAGwK,EAAMhG,OAAS,IAAM+G,GAAa,IAAKf,EAAM,GAAGzL,OAAS,GAAK,IAAM8R,EAAU7Q,MAAM/B,KAAK8I,UAAUwF,MAAMe,OAAO6F,UAAUzB,WAI3J,KAA4E,OAApElH,EAAQvM,KAAK8I,UAAUwF,MAAMe,OAAO8F,YAAYrJ,KAAK8G,KAC3DA,EAAYA,EAAU7Q,MAAM,EAAGwK,EAAMhG,OAAS,KAAOqM,EAAU7Q,MAAM/B,KAAK8I,UAAUwF,MAAMe,OAAO8F,YAAY1B,WAG/G,KAAOpF,GAOL,GANK0I,IACHlE,EAAW,IAEbkE,GAAe,IAGX/W,KAAKb,QAAQ8I,YACZjI,KAAKb,QAAQ8I,WAAWoH,QACxBrP,KAAKb,QAAQ8I,WAAWoH,OAAO6B,MAAMoF,MAClCrI,EAAQqI,EAAatU,KAAK,CAAE6L,MAAO7N,MAAQqO,EAAKH,MAClDG,EAAMA,EAAIhE,UAAU4D,EAAML,IAAI9M,QAC9BoN,EAAOxL,KAAKuL,IACL,MAQb,GAAIA,EAAQjO,KAAK8I,UAAUW,OAAO4E,GAChCA,EAAMA,EAAIhE,UAAU4D,EAAML,IAAI9M,QAC9BoN,EAAOxL,KAAKuL,QAKd,GAAIA,EAAQjO,KAAK8I,UAAUuI,IAAIhD,GAC7BA,EAAMA,EAAIhE,UAAU4D,EAAML,IAAI9M,QAC9BqV,EAAYjI,EAAOA,EAAOpN,OAAS,GAC/BqV,GAA4B,SAAflI,EAAM1M,MAAsC,SAAnB4U,EAAU5U,MAClD4U,EAAUvI,KAAOK,EAAML,IACvBuI,EAAUvX,MAAQqP,EAAMrP,MAExBsP,EAAOxL,KAAKuL,QAMhB,GAAIA,EAAQjO,KAAK8I,UAAU6E,KAAKU,GAC9BA,EAAMA,EAAIhE,UAAU4D,EAAML,IAAI9M,QAC9BoN,EAAOxL,KAAKuL,QAKd,GAAIA,EAAQjO,KAAK8I,UAAU0J,QAAQnE,EAAKrO,KAAKkO,OAAOuE,OAClDpE,EAAMA,EAAIhE,UAAU4D,EAAML,IAAI9M,QAC9BqV,EAAYjI,EAAOA,EAAOpN,OAAS,GAC/BqV,GAA4B,SAAflI,EAAM1M,MAAsC,SAAnB4U,EAAU5U,MAClD4U,EAAUvI,KAAOK,EAAML,IACvBuI,EAAUvX,MAAQqP,EAAMrP,MAExBsP,EAAOxL,KAAKuL,QAMhB,GAAIA,EAAQjO,KAAK8I,UAAU6J,SAAStE,EAAKuE,EAAWC,GAClDxE,EAAMA,EAAIhE,UAAU4D,EAAML,IAAI9M,QAC9BoN,EAAOxL,KAAKuL,QAKd,GAAIA,EAAQjO,KAAK8I,UAAU4K,SAASrF,GAClCA,EAAMA,EAAIhE,UAAU4D,EAAML,IAAI9M,QAC9BoN,EAAOxL,KAAKuL,QAKd,GAAIA,EAAQjO,KAAK8I,UAAU+K,GAAGxF,GAC5BA,EAAMA,EAAIhE,UAAU4D,EAAML,IAAI9M,QAC9BoN,EAAOxL,KAAKuL,QAKd,GAAIA,EAAQjO,KAAK8I,UAAUgL,IAAIzF,GAC7BA,EAAMA,EAAIhE,UAAU4D,EAAML,IAAI9M,QAC9BoN,EAAOxL,KAAKuL,QAKd,GAAIA,EAAQjO,KAAK8I,UAAUiL,SAAS1F,EAAK9F,IACvC8F,EAAMA,EAAIhE,UAAU4D,EAAML,IAAI9M,QAC9BoN,EAAOxL,KAAKuL,QAKd,GAAKjO,KAAK+N,MAAMC,UAAWC,EAAQjO,KAAK8I,UAAUkL,IAAI3F,EAAK9F,KAA3D,CASA,GADA6N,EAAS/H,EACLrO,KAAKb,QAAQ8I,YAAcjI,KAAKb,QAAQ8I,WAAWiP,YAAa,CAClE,IAAIV,EAAaC,EAAAA,EACjB,MAAMC,EAAUrI,EAAItM,MAAM,GAC1B,IAAI4U,EACJ3W,KAAKb,QAAQ8I,WAAWiP,YAAY1Z,SAAQ,SAASoZ,GACnDD,EAAYC,EAAc5U,KAAK,CAAE6L,MAAO7N,MAAQ0W,GACvB,iBAAdC,GAA0BA,GAAa,IAAKH,EAAa5F,KAAKC,IAAI2F,EAAYG,OAEvFH,EAAaC,EAAAA,GAAYD,GAAc,IACzCJ,EAAS/H,EAAIhE,UAAU,EAAGmM,EAAa,IAG3C,GAAIvI,EAAQjO,KAAK8I,UAAUqL,WAAWiC,EAAQvN,IAC5CwF,EAAMA,EAAIhE,UAAU4D,EAAML,IAAI9M,QACF,MAAxBmN,EAAML,IAAI7L,OAAO,KACnB8Q,EAAW5E,EAAML,IAAI7L,OAAO,IAE9BgV,GAAe,EACfZ,EAAYjI,EAAOA,EAAOpN,OAAS,GAC/BqV,GAAgC,SAAnBA,EAAU5U,MACzB4U,EAAUvI,KAAOK,EAAML,IACvBuI,EAAUvX,MAAQqP,EAAMrP,MAExBsP,EAAOxL,KAAKuL,QAKhB,GAAII,EAAK,CACP,MAAMwI,EAAS,0BAA4BxI,EAAIyG,WAAW,GAC1D,GAAI9U,KAAKb,QAAQwJ,OAAQ,CACvByE,QAAQ0J,MAAMD,GACd,MAEA,MAAM,IAAIxV,MAAMwV,SA1ClBxI,EAAMA,EAAIhE,UAAU4D,EAAML,IAAI9M,QAC9BoN,EAAOxL,KAAKuL,GA8ChB,OAAOC,GAOX,MAAMiJ,GACJpX,YAAYZ,GACVa,KAAKb,QAAUA,GAAW8J,EAG5BuF,KAAKA,EAAM4I,EAAY1K,GACrB,MAAMuC,GAAQmI,GAAc,IAAI7K,MAAM,OAAO,GAC7C,GAAIvM,KAAKb,QAAQkJ,UAAW,CAC1B,MAAMwM,EAAM7U,KAAKb,QAAQkJ,UAAUmG,EAAMS,GAC9B,MAAP4F,GAAeA,IAAQrG,IACzB9B,GAAU,EACV8B,EAAOqG,GAMX,OAFArG,EAAOA,EAAK5E,QAAQ,MAAO,IAAM,KAE5BqF,EAME,qBACHjP,KAAKb,QAAQmJ,WACbmB,GAAOwF,GAAM,GACb,MACCvC,EAAU8B,EAAO/E,GAAO+E,GAAM,IAC/B,kBAVK,eACF9B,EAAU8B,EAAO/E,GAAO+E,GAAM,IAC/B,kBAWRe,WAAW8H,GACT,MAAO,iBAAmBA,EAAQ,kBAGpCjX,KAAKA,GACH,OAAOA,EAGT8O,QAAQtQ,EAAMwT,EAAOxE,EAAK0J,GACxB,OAAItX,KAAKb,QAAQgJ,UACR,KACHiK,EACA,QACApS,KAAKb,QAAQiJ,aACbkP,EAAQC,KAAK3J,GACb,KACAhP,EACA,MACAwT,EACA,MAGC,KAAOA,EAAQ,IAAMxT,EAAO,MAAQwT,EAAQ,MAGrD9C,KACE,OAAOtP,KAAKb,QAAQ6J,MAAQ,UAAY,SAG1CyG,KAAK+H,EAAMpH,EAASC,GAClB,MAAM9O,EAAO6O,EAAU,KAAO,KAE9B,MAAO,IAAM7O,GADC6O,GAAqB,IAAVC,EAAgB,WAAaA,EAAQ,IAAO,IACtC,MAAQmH,EAAO,KAAOjW,EAAO,MAG9DkW,SAAS7Y,GACP,MAAO,OAASA,EAAO,UAGzB8Y,SAAS3G,GACP,MAAO,WACFA,EAAU,cAAgB,IAC3B,+BACC/Q,KAAKb,QAAQ6J,MAAQ,KAAO,IAC7B,KAGN+I,UAAUnT,GACR,MAAO,MAAQA,EAAO,SAGxB0S,MAAME,EAAQgG,GAGZ,OAFIA,IAAMA,EAAO,UAAYA,EAAO,YAE7B,qBAEHhG,EACA,aACAgG,EACA,aAGNG,SAASC,GACP,MAAO,SAAWA,EAAU,UAG9BC,UAAUD,EAASE,GACjB,MAAMvW,EAAOuW,EAAMtG,OAAS,KAAO,KAInC,OAHYsG,EAAMrG,MACd,IAAMlQ,EAAO,WAAauW,EAAMrG,MAAQ,KACxC,IAAMlQ,EAAO,KACJqW,EAAU,KAAOrW,EAAO,MAIvCiU,OAAO5W,GACL,MAAO,WAAaA,EAAO,YAG7BgX,GAAGhX,GACD,MAAO,OAASA,EAAO,QAGzB8U,SAAS9U,GACP,MAAO,SAAWA,EAAO,UAG3BiV,KACE,OAAO7T,KAAKb,QAAQ6J,MAAQ,QAAU,OAGxC8K,IAAIlV,GACF,MAAO,QAAUA,EAAO,SAG1B+O,KAAKzC,EAAM4C,EAAOlP,GAEhB,GAAa,QADbsM,EAAOF,GAAShL,KAAKb,QAAQyI,SAAU5H,KAAKb,QAAQ4I,QAASmD,IAE3D,OAAOtM,EAET,IAAIiW,EAAM,YAAcpL,GAAOyB,GAAQ,IAKvC,OAJI4C,IACF+G,GAAO,WAAa/G,EAAQ,KAE9B+G,GAAO,IAAMjW,EAAO,OACbiW,EAGTkD,MAAM7M,EAAM4C,EAAOlP,GAEjB,GAAa,QADbsM,EAAOF,GAAShL,KAAKb,QAAQyI,SAAU5H,KAAKb,QAAQ4I,QAASmD,IAE3D,OAAOtM,EAGT,IAAIiW,EAAM,aAAe3J,EAAO,UAAYtM,EAAO,IAKnD,OAJIkP,IACF+G,GAAO,WAAa/G,EAAQ,KAE9B+G,GAAO7U,KAAKb,QAAQ6J,MAAQ,KAAO,IAC5B6L,EAGTjW,KAAKA,GACH,OAAOA,GAQX,MAAMoZ,GAEJxC,OAAO5W,GACL,OAAOA,EAGTgX,GAAGhX,GACD,OAAOA,EAGT8U,SAAS9U,GACP,OAAOA,EAGTkV,IAAIlV,GACF,OAAOA,EAGTwB,KAAKxB,GACH,OAAOA,EAGTA,KAAKA,GACH,OAAOA,EAGT+O,KAAKzC,EAAM4C,EAAOlP,GAChB,MAAO,GAAKA,EAGdmZ,MAAM7M,EAAM4C,EAAOlP,GACjB,MAAO,GAAKA,EAGdiV,KACE,MAAO,IAOX,MAAMoE,GACJlY,cACEC,KAAKkY,KAAO,GAGdC,UAAU3Y,GACR,OAAOA,EACJwK,cACA6C,OAEAjD,QAAQ,kBAAmB,IAE3BA,QAAQ,gEAAiE,IACzEA,QAAQ,MAAO,KAMpBwO,gBAAgBC,EAAcC,GAC5B,IAAIf,EAAOc,EACPE,EAAuB,EAC3B,GAAIvY,KAAKkY,KAAKhM,eAAeqL,GAAO,CAClCgB,EAAuBvY,KAAKkY,KAAKG,GACjC,GACEE,IACAhB,EAAOc,EAAe,IAAME,QACrBvY,KAAKkY,KAAKhM,eAAeqL,IAMpC,OAJKe,IACHtY,KAAKkY,KAAKG,GAAgBE,EAC1BvY,KAAKkY,KAAKX,GAAQ,GAEbA,EAQTA,KAAK/X,EAAOL,EAAU,IACpB,MAAMoY,EAAOvX,KAAKmY,UAAU3Y,GAC5B,OAAOQ,KAAKoY,gBAAgBb,EAAMpY,EAAQqZ,SAO9C,MAAMC,GACJ1Y,YAAYZ,GACVa,KAAKb,QAAUA,GAAW8J,EAC1BjJ,KAAKb,QAAQsJ,SAAWzI,KAAKb,QAAQsJ,UAAY,IAAI0O,GACrDnX,KAAKyI,SAAWzI,KAAKb,QAAQsJ,SAC7BzI,KAAKyI,SAAStJ,QAAUa,KAAKb,QAC7Ba,KAAK0Y,aAAe,IAAIV,GACxBhY,KAAKsX,QAAU,IAAIW,GAMrBjC,aAAa9H,EAAQ/O,GAEnB,OADe,IAAIsZ,GAAOtZ,GACZwZ,MAAMzK,GAMtB8H,mBAAmB9H,EAAQ/O,GAEzB,OADe,IAAIsZ,GAAOtZ,GACZyZ,YAAY1K,GAM5ByK,MAAMzK,EAAQ+C,GAAM,GAClB,IACExQ,EACAkR,EACAC,EACAiH,EACAC,EACAjH,EACAkH,EACAvH,EACAgG,EACAvJ,EACAmC,EACAC,EACAC,EACA0I,EACAzH,EACAR,EACAD,EACA4G,EACA7R,EAnBEgP,EAAM,GAqBV,MAAM3O,EAAIgI,EAAOpN,OACjB,IAAKL,EAAI,EAAGA,EAAIyF,EAAGzF,IAIjB,GAHAwN,EAAQC,EAAOzN,GAGXT,KAAKb,QAAQ8I,YAAcjI,KAAKb,QAAQ8I,WAAWgR,WAAajZ,KAAKb,QAAQ8I,WAAWgR,UAAUhL,EAAM1M,QAC1GsE,EAAM7F,KAAKb,QAAQ8I,WAAWgR,UAAUhL,EAAM1M,MAAMS,KAAK,CAAEkX,OAAQlZ,MAAQiO,IAC/D,IAARpI,IAAkB,CAAC,QAAS,KAAM,UAAW,OAAQ,QAAS,aAAc,OAAQ,OAAQ,YAAa,QAAQmR,SAAS/I,EAAM1M,OAClIsT,GAAOhP,GAAO,QAKlB,OAAQoI,EAAM1M,MACZ,IAAK,QACH,SAEF,IAAK,KACHsT,GAAO7U,KAAKyI,SAAS6G,KACrB,SAEF,IAAK,UACHuF,GAAO7U,KAAKyI,SAASyG,QACnBlP,KAAK4Y,YAAY3K,EAAMC,QACvBD,EAAMmB,MACNtF,GAAS9J,KAAK4Y,YAAY3K,EAAMC,OAAQlO,KAAK0Y,eAC7C1Y,KAAKsX,SACP,SAEF,IAAK,OACHzC,GAAO7U,KAAKyI,SAAS+F,KAAKP,EAAMrP,KAC9BqP,EAAMgB,KACNhB,EAAMvB,SACR,SAEF,IAAK,QAMH,IALA8E,EAAS,GAGTuH,EAAO,GACPF,EAAK5K,EAAMuD,OAAO1Q,OACb6Q,EAAI,EAAGA,EAAIkH,EAAIlH,IAClBoH,GAAQ/Y,KAAKyI,SAASoP,UACpB7X,KAAK4Y,YAAY3K,EAAMuD,OAAOG,GAAGzD,QACjC,CAAEsD,QAAQ,EAAMC,MAAOxD,EAAMwD,MAAME,KAOvC,IAJAH,GAAUxR,KAAKyI,SAASkP,SAASoB,GAEjCvB,EAAO,GACPqB,EAAK5K,EAAMyD,KAAK5Q,OACX6Q,EAAI,EAAGA,EAAIkH,EAAIlH,IAAK,CAKvB,IAJAE,EAAM5D,EAAMyD,KAAKC,GAEjBoH,EAAO,GACPD,EAAKjH,EAAI/Q,OACJ8Q,EAAI,EAAGA,EAAIkH,EAAIlH,IAClBmH,GAAQ/Y,KAAKyI,SAASoP,UACpB7X,KAAK4Y,YAAY/G,EAAID,GAAG1D,QACxB,CAAEsD,QAAQ,EAAOC,MAAOxD,EAAMwD,MAAMG,KAIxC4F,GAAQxX,KAAKyI,SAASkP,SAASoB,GAEjClE,GAAO7U,KAAKyI,SAAS6I,MAAME,EAAQgG,GACnC,SAEF,IAAK,aACHA,EAAOxX,KAAK2Y,MAAM1K,EAAMC,QACxB2G,GAAO7U,KAAKyI,SAAS8G,WAAWiI,GAChC,SAEF,IAAK,OAOH,IANApH,EAAUnC,EAAMmC,QAChBC,EAAQpC,EAAMoC,MACdC,EAAQrC,EAAMqC,MACduI,EAAK5K,EAAMsC,MAAMzP,OAEjB0W,EAAO,GACF7F,EAAI,EAAGA,EAAIkH,EAAIlH,IAClBJ,EAAOtD,EAAMsC,MAAMoB,GACnBZ,EAAUQ,EAAKR,QACfD,EAAOS,EAAKT,KAEZkI,EAAW,GACPzH,EAAKT,OACP4G,EAAW1X,KAAKyI,SAASiP,SAAS3G,GAC9BT,EACEiB,EAAKrD,OAAOpN,OAAS,GAA6B,cAAxByQ,EAAKrD,OAAO,GAAG3M,MAC3CgQ,EAAKrD,OAAO,GAAGtP,KAAO8Y,EAAW,IAAMnG,EAAKrD,OAAO,GAAGtP,KAClD2S,EAAKrD,OAAO,GAAGA,QAAUqD,EAAKrD,OAAO,GAAGA,OAAOpN,OAAS,GAAuC,SAAlCyQ,EAAKrD,OAAO,GAAGA,OAAO,GAAG3M,OACxFgQ,EAAKrD,OAAO,GAAGA,OAAO,GAAGtP,KAAO8Y,EAAW,IAAMnG,EAAKrD,OAAO,GAAGA,OAAO,GAAGtP,OAG5E2S,EAAKrD,OAAOiL,QAAQ,CAClB5X,KAAM,OACN3C,KAAM8Y,IAIVsB,GAAYtB,GAIhBsB,GAAYhZ,KAAK2Y,MAAMpH,EAAKrD,OAAQoC,GACpCkH,GAAQxX,KAAKyI,SAASgP,SAASuB,EAAUlI,EAAMC,GAGjD8D,GAAO7U,KAAKyI,SAASgH,KAAK+H,EAAMpH,EAASC,GACzC,SAEF,IAAK,OAEHwE,GAAO7U,KAAKyI,SAASrI,KAAK6N,EAAMrP,MAChC,SAEF,IAAK,YACHiW,GAAO7U,KAAKyI,SAASsJ,UAAU/R,KAAK4Y,YAAY3K,EAAMC,SACtD,SAEF,IAAK,OAEH,IADAsJ,EAAOvJ,EAAMC,OAASlO,KAAK4Y,YAAY3K,EAAMC,QAAUD,EAAMrP,KACtD6B,EAAI,EAAIyF,GAA4B,SAAvBgI,EAAOzN,EAAI,GAAGc,MAChC0M,EAAQC,IAASzN,GACjB+W,GAAQ,MAAQvJ,EAAMC,OAASlO,KAAK4Y,YAAY3K,EAAMC,QAAUD,EAAMrP,MAExEiW,GAAO5D,EAAMjR,KAAKyI,SAASsJ,UAAUyF,GAAQA,EAC7C,SAGF,QAAS,CACP,MAAMX,EAAS,eAAiB5I,EAAM1M,KAAO,wBAC7C,GAAIvB,KAAKb,QAAQwJ,OAEf,YADAyE,QAAQ0J,MAAMD,GAGd,MAAM,IAAIxV,MAAMwV,IAMxB,OAAOhC,EAMT+D,YAAY1K,EAAQzF,GAClBA,EAAWA,GAAYzI,KAAKyI,SAC5B,IACEhI,EACAwN,EACApI,EAHEgP,EAAM,GAKV,MAAM3O,EAAIgI,EAAOpN,OACjB,IAAKL,EAAI,EAAGA,EAAIyF,EAAGzF,IAIjB,GAHAwN,EAAQC,EAAOzN,GAGXT,KAAKb,QAAQ8I,YAAcjI,KAAKb,QAAQ8I,WAAWgR,WAAajZ,KAAKb,QAAQ8I,WAAWgR,UAAUhL,EAAM1M,QAC1GsE,EAAM7F,KAAKb,QAAQ8I,WAAWgR,UAAUhL,EAAM1M,MAAMS,KAAK,CAAEkX,OAAQlZ,MAAQiO,IAC/D,IAARpI,IAAkB,CAAC,SAAU,OAAQ,OAAQ,QAAS,SAAU,KAAM,WAAY,KAAM,MAAO,QAAQmR,SAAS/I,EAAM1M,OACxHsT,GAAOhP,GAAO,QAKlB,OAAQoI,EAAM1M,MACZ,IAAK,SAoCL,IAAK,OACHsT,GAAOpM,EAAS7J,KAAKqP,EAAMrP,MAC3B,MAlCF,IAAK,OACHiW,GAAOpM,EAASrI,KAAK6N,EAAMrP,MAC3B,MAEF,IAAK,OACHiW,GAAOpM,EAASkF,KAAKM,EAAM/C,KAAM+C,EAAMH,MAAO9N,KAAK4Y,YAAY3K,EAAMC,OAAQzF,IAC7E,MAEF,IAAK,QACHoM,GAAOpM,EAASsP,MAAM9J,EAAM/C,KAAM+C,EAAMH,MAAOG,EAAMrP,MACrD,MAEF,IAAK,SACHiW,GAAOpM,EAAS+M,OAAOxV,KAAK4Y,YAAY3K,EAAMC,OAAQzF,IACtD,MAEF,IAAK,KACHoM,GAAOpM,EAASmN,GAAG5V,KAAK4Y,YAAY3K,EAAMC,OAAQzF,IAClD,MAEF,IAAK,WACHoM,GAAOpM,EAASiL,SAASzF,EAAMrP,MAC/B,MAEF,IAAK,KACHiW,GAAOpM,EAASoL,KAChB,MAEF,IAAK,MACHgB,GAAOpM,EAASqL,IAAI9T,KAAK4Y,YAAY3K,EAAMC,OAAQzF,IACnD,MAMF,QAAS,CACP,MAAMoO,EAAS,eAAiB5I,EAAM1M,KAAO,wBAC7C,GAAIvB,KAAKb,QAAQwJ,OAEf,YADAyE,QAAQ0J,MAAMD,GAGd,MAAM,IAAIxV,MAAMwV,IAKxB,OAAOhC,GAOX,SAASuE,GAAO/K,EAAK5D,EAAKxH,GAExB,GAAI,MAAOoL,EACT,MAAM,IAAIhN,MAAM,kDAElB,GAAmB,iBAARgN,EACT,MAAM,IAAIhN,MAAM,wCACZjE,OAAO6O,UAAU+I,SAAShT,KAAKqM,GAAO,qBAW5C,GARmB,mBAAR5D,IACTxH,EAAWwH,EACXA,EAAM,MAIR0C,GADA1C,EAAMsB,GAAM,GAAIqN,GAAOnQ,SAAUwB,GAAO,KAGpCxH,EAAU,CACZ,MAAMoF,EAAYoC,EAAIpC,UACtB,IAAI6F,EAEJ,IACEA,EAAS4H,GAAMG,IAAI5H,EAAK5D,GACxB,MAAOxK,GACP,OAAOgD,EAAShD,GAGlB,MAAMoZ,EAAO,SAASC,GACpB,IAAIzE,EAEJ,IAAKyE,EACH,IACM7O,EAAI1B,YACNqQ,GAAOrQ,WAAWmF,EAAQzD,EAAI1B,YAEhC8L,EAAM4D,GAAOE,MAAMzK,EAAQzD,GAC3B,MAAOxK,GACPqZ,EAAMrZ,EAMV,OAFAwK,EAAIpC,UAAYA,EAETiR,EACHrW,EAASqW,GACTrW,EAAS,KAAM4R,IAGrB,IAAKxM,GAAaA,EAAUvH,OAAS,EACnC,OAAOuY,IAKT,UAFO5O,EAAIpC,WAEN6F,EAAOpN,OAAQ,OAAOuY,IAE3B,IAAIE,EAAU,EA2Bd,OA1BAH,GAAOrQ,WAAWmF,GAAQ,SAASD,GACd,SAAfA,EAAM1M,OACRgY,IACAC,YAAW,KACTnR,EAAU4F,EAAMrP,KAAMqP,EAAMgB,MAAM,SAASqK,EAAK9K,GAC9C,GAAI8K,EACF,OAAOD,EAAKC,GAEF,MAAR9K,GAAgBA,IAASP,EAAMrP,OACjCqP,EAAMrP,KAAO4P,EACbP,EAAMvB,SAAU,GAGlB6M,IACgB,IAAZA,GACFF,SAGH,YAIS,IAAZE,GACFF,KAMJ,IACE,MAAMnL,EAAS4H,GAAMG,IAAI5H,EAAK5D,GAI9B,OAHIA,EAAI1B,YACNqQ,GAAOrQ,WAAWmF,EAAQzD,EAAI1B,YAEzB0P,GAAOE,MAAMzK,EAAQzD,GAC5B,MAAOxK,GAEP,GADAA,EAAEwZ,SAAW,8DACThP,EAAI9B,OACN,MAAO,iCACHc,GAAOxJ,EAAEwZ,QAAU,IAAI,GACvB,SAEN,MAAMxZ,kFC/2EyBuD,2OAFd4V,GAAO5V,sBAAoBA,oFAA3B4V,GAAO5V,wKADrBA,mGADPtF,yEL8hCIyF,EAAS,CACL+V,EAAG,EACHvZ,EAAG,GACHY,EAAG4C,iCAIFA,EAAO+V,GACRpc,EAAQqG,EAAOxD,GAEnBwD,EAASA,EAAO5C,oJKxjCdsG,EAAWN,IAGX4S,GAAc,4BAIhBA,GAAc,aAGO1Z,OAErBoH,EAAWM,UAAUC,SAAS3H,EAAEuB,aAChCmY,GAAc,KD83ElBP,GAAOja,QACPia,GAAOQ,WAAa,SAASnP,GA92E7B,IAAwBoP,EAi3EtB,OAFA9N,GAAMqN,GAAOnQ,SAAUwB,GA/2EDoP,EAg3EPT,GAAOnQ,SA/2EtBA,EAAW4Q,EAg3EJT,IAGTA,GAAOtR,YAAcA,EAErBsR,GAAOnQ,SAAWA,EAMlBmQ,GAAOU,IAAM,YAAYC,GACvB,MAAMC,EAAOjO,GAAM,MAAOgO,GACpB9R,EAAamR,GAAOnQ,SAAShB,YAAc,CAAEgR,UAAW,GAAIgB,YAAa,IAC/E,IAAIC,EAEJH,EAAKvc,SAAS2c,IAuDZ,GArDIA,EAAKlS,aACPiS,GAAgB,EAChBC,EAAKlS,WAAWzK,SAAS4c,IACvB,IAAKA,EAAI3b,KACP,MAAM,IAAI4C,MAAM,2BAElB,GAAI+Y,EAAI3R,SAAU,CAChB,MAAM4R,EAAepS,EAAWgR,UAAYhR,EAAWgR,UAAUmB,EAAI3b,MAAQ,KAG3EwJ,EAAWgR,UAAUmB,EAAI3b,MAFvB4b,EAE+B,YAAYN,GAC3C,IAAIlU,EAAMuU,EAAI3R,SAAS6R,MAAMta,KAAM+Z,GAInC,OAHY,IAARlU,IACFA,EAAMwU,EAAaC,MAAMta,KAAM+Z,IAE1BlU,GAGwBuU,EAAI3R,SAGzC,GAAI2R,EAAItR,UAAW,CACjB,IAAKsR,EAAIhI,OAAwB,UAAdgI,EAAIhI,OAAmC,WAAdgI,EAAIhI,MAC9C,MAAM,IAAI/Q,MAAM,+CAEd4G,EAAWmS,EAAIhI,OACjBnK,EAAWmS,EAAIhI,OAAO+G,QAAQiB,EAAItR,WAElCb,EAAWmS,EAAIhI,OAAS,CAACgI,EAAItR,WAE3BsR,EAAI/J,QACY,UAAd+J,EAAIhI,MACFnK,EAAWsO,WACbtO,EAAWsO,WAAW7T,KAAK0X,EAAI/J,OAE/BpI,EAAWsO,WAAa,CAAC6D,EAAI/J,OAER,WAAd+J,EAAIhI,QACTnK,EAAWiP,YACbjP,EAAWiP,YAAYxU,KAAK0X,EAAI/J,OAEhCpI,EAAWiP,YAAc,CAACkD,EAAI/J,SAKlC+J,EAAIH,cACNhS,EAAWgS,YAAYG,EAAI3b,MAAQ2b,EAAIH,iBAMzCE,EAAK1R,SAAU,CACjB,MAAMA,EAAW2Q,GAAOnQ,SAASR,UAAY,IAAI0O,GACjD,IAAK,MAAMoD,KAAQJ,EAAK1R,SAAU,CAChC,MAAM4R,EAAe5R,EAAS8R,GAE9B9R,EAAS8R,GAAQ,IAAIR,KACnB,IAAIlU,EAAMsU,EAAK1R,SAAS8R,GAAMD,MAAM7R,EAAUsR,GAI9C,OAHY,IAARlU,IACFA,EAAMwU,EAAaC,MAAM7R,EAAUsR,IAE9BlU,GAGXmU,EAAKvR,SAAWA,EAElB,GAAI0R,EAAKrR,UAAW,CAClB,MAAMA,EAAYsQ,GAAOnQ,SAASH,WAAa,IAAIsF,GACnD,IAAK,MAAMmM,KAAQJ,EAAKrR,UAAW,CACjC,MAAM0R,EAAgB1R,EAAUyR,GAEhCzR,EAAUyR,GAAQ,IAAIR,KACpB,IAAIlU,EAAMsU,EAAKrR,UAAUyR,GAAMD,MAAMxR,EAAWiR,GAIhD,OAHY,IAARlU,IACFA,EAAM2U,EAAcF,MAAMxR,EAAWiR,IAEhClU,GAGXmU,EAAKlR,UAAYA,EAInB,GAAIqR,EAAKpR,WAAY,CACnB,MAAMA,EAAaqQ,GAAOnQ,SAASF,WACnCiR,EAAKjR,WAAa,SAASkF,GACzBkM,EAAKpR,WAAW/G,KAAKhC,KAAMiO,GACvBlF,GACFA,EAAW/G,KAAKhC,KAAMiO,IAKxBiM,IACFF,EAAK/R,WAAaA,GAGpBmR,GAAOQ,WAAWI,OAQtBZ,GAAOrQ,WAAa,SAASmF,EAAQjL,GACnC,IAAK,MAAMgL,KAASC,EAElB,OADAjL,EAASjB,KAAKoX,GAAQnL,GACdA,EAAM1M,MACZ,IAAK,QACH,IAAK,MAAMwX,KAAQ9K,EAAMuD,OACvB4H,GAAOrQ,WAAWgQ,EAAK7K,OAAQjL,GAEjC,IAAK,MAAM4O,KAAO5D,EAAMyD,KACtB,IAAK,MAAMqH,KAAQlH,EACjBuH,GAAOrQ,WAAWgQ,EAAK7K,OAAQjL,GAGnC,MAEF,IAAK,OACHmW,GAAOrQ,WAAWkF,EAAMsC,MAAOtN,GAC/B,MAEF,QACMmW,GAAOnQ,SAAShB,YAAcmR,GAAOnQ,SAAShB,WAAWgS,aAAeb,GAAOnQ,SAAShB,WAAWgS,YAAYhM,EAAM1M,MACvH6X,GAAOnQ,SAAShB,WAAWgS,YAAYhM,EAAM1M,MAAM/D,SAAQ,SAASyc,GAClEb,GAAOrQ,WAAWkF,EAAMgM,GAAchX,MAE/BgL,EAAMC,QACfkL,GAAOrQ,WAAWkF,EAAMC,OAAQjL,KAU1CmW,GAAOR,YAAc,SAASvK,EAAK5D,GAEjC,GAAI,MAAO4D,EACT,MAAM,IAAIhN,MAAM,8DAElB,GAAmB,iBAARgN,EACT,MAAM,IAAIhN,MAAM,oDACZjE,OAAO6O,UAAU+I,SAAShT,KAAKqM,GAAO,qBAI5ClB,GADA1C,EAAMsB,GAAM,GAAIqN,GAAOnQ,SAAUwB,GAAO,KAGxC,IACE,MAAMyD,EAAS4H,GAAM2E,UAAUpM,EAAK5D,GAIpC,OAHIA,EAAI1B,YACNqQ,GAAOrQ,WAAWmF,EAAQzD,EAAI1B,YAEzB0P,GAAOG,YAAY1K,EAAQzD,GAClC,MAAOxK,GAEP,GADAA,EAAEwZ,SAAW,8DACThP,EAAI9B,OACN,MAAO,iCACHc,GAAOxJ,EAAEwZ,QAAU,IAAI,GACvB,SAEN,MAAMxZ,IAOVmZ,GAAOX,OAASA,GAChBW,GAAOF,OAAST,GAAOE,MACvBS,GAAOjC,SAAWA,GAClBiC,GAAOpB,aAAeA,GACtBoB,GAAOtD,MAAQA,GACfsD,GAAOvL,MAAQiI,GAAMG,IACrBmD,GAAOhL,UAAYA,GACnBgL,GAAOnB,QAAUA,GACjBmB,GAAOT,MAAQS,GAQAX,GAAOE,MACR7C,GAAMG,WEtmFR,kEAAQ,CACnBlY,OAAQW,SAAS8Y"}